[{"blocks":[{"lines":[{"content":" package bios.plugin.web.wfs;","type":"context","oldNumber":1,"newNumber":1},{"content":" ","type":"context","oldNumber":2,"newNumber":2},{"content":"-import java.awt.*;","type":"delete","oldNumber":3},{"content":" import java.awt.geom.Point2D;","type":"context","oldNumber":4,"newNumber":3},{"content":" import java.util.Comparator;","type":"context","oldNumber":5,"newNumber":4},{"content":" import java.util.List;","type":"context","oldNumber":6,"newNumber":5},{"content":" ","type":"context","oldNumber":7,"newNumber":6},{"content":"-public class KdBuilder {","type":"delete","oldNumber":8},{"content":"-    record KdTree(Point2D p, KdTree left, KdTree right) {","type":"delete","oldNumber":9},{"content":"-    }","type":"delete","oldNumber":10},{"content":"-","type":"delete","oldNumber":11},{"content":"-    public static KdTree build (List<Point> points) {","type":"delete","oldNumber":12},{"content":"+public record KdTree (Point2D p, KdTree left, KdTree right) {","type":"insert","newNumber":7},{"content":"+    public static KdTree build (List<Point2D> points) {","type":"insert","newNumber":8},{"content":" \treturn build (points, 0);","type":"context","oldNumber":13,"newNumber":9},{"content":"     }","type":"context","oldNumber":14,"newNumber":10},{"content":" ","type":"context","oldNumber":15,"newNumber":11},{"content":"-    private static KdTree build (List<Point> points, int depth) {","type":"delete","oldNumber":16},{"content":"+    private static KdTree build (List<Point2D> points, int depth) {","type":"insert","newNumber":12},{"content":" \t// base case","type":"context","oldNumber":17,"newNumber":13},{"content":" \tif (points == null || points.isEmpty ()) {","type":"context","oldNumber":18,"newNumber":14},{"content":"-\t    return new KdTree (null, null, null);","type":"delete","oldNumber":19},{"content":"+\t    return null;","type":"insert","newNumber":15},{"content":" \t}","type":"context","oldNumber":20,"newNumber":16},{"content":" ","type":"context","oldNumber":21,"newNumber":17},{"content":" \t// recursive case","type":"context","oldNumber":22,"newNumber":18}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,22 +1,18 @@"}],"deletedLines":8,"addedLines":4,"isGitDiff":true,"checksumBefore":"3eba861eff1","checksumAfter":"a1dd93b8b29","mode":"100644","oldName":"src/bios/plugin/web/wfs/KdTree.java","language":"java","newName":"src/bios/plugin/web/wfs/KdTree.java","isCombined":false},{"blocks":[{"lines":[{"content":" import bios.plugin.web.wfs.responsewrappers.*;","type":"context","oldNumber":3,"newNumber":3},{"content":" ","type":"context","oldNumber":4,"newNumber":4},{"content":" public final class ResponseAdapter {","type":"context","oldNumber":5,"newNumber":5},{"content":"-    public WrappedResponse<?> adapt (Object o) {","type":"delete","oldNumber":6},{"content":"+    public static WrappedResponse<?> adapt (Object o) {","type":"insert","newNumber":6},{"content":" \tif (o instanceof dpgen.xsd.Schema schema) {","type":"context","oldNumber":7,"newNumber":7},{"content":" \t    return new WrappedDescribeFeatureTypeResponse (schema);","type":"context","oldNumber":8,"newNumber":8},{"content":" \t}","type":"context","oldNumber":9,"newNumber":9}],"oldStartLine":3,"oldStartLine2":null,"newStartLine":3,"header":"@@ -3,7 +3,7 @@ package bios.plugin.web.wfs;"}],"deletedLines":1,"addedLines":1,"isGitDiff":true,"checksumBefore":"202200f0379","checksumAfter":"881103ae3ad","mode":"100644","oldName":"src/bios/plugin/web/wfs/ResponseAdapter.java","language":"java","newName":"src/bios/plugin/web/wfs/ResponseAdapter.java","isCombined":false},{"blocks":[{"lines":[{"content":"  */","type":"context","oldNumber":32,"newNumber":32},{"content":" public class WFS {","type":"context","oldNumber":33,"newNumber":33},{"content":" ","type":"context","oldNumber":34,"newNumber":34},{"content":"-    public static final Version DEFAULT_VERSION = Version.v2;","type":"delete","oldNumber":35},{"content":"-    public enum Version {","type":"delete","oldNumber":36},{"content":"-\tv110, v2","type":"delete","oldNumber":37},{"content":"-    }","type":"delete","oldNumber":38},{"content":"+    public static final WFSVersion DEFAULT_VERSION = WFSVersion.v2;","type":"insert","newNumber":35},{"content":" ","type":"context","oldNumber":39,"newNumber":36},{"content":"     public static WFSRequestBuilder getFeatureBuilderForHandler (WFSHandler handler) {","type":"context","oldNumber":40,"newNumber":37},{"content":" \treturn getFeatureBuilderForVersion (handler.getVersion ());","type":"context","oldNumber":41,"newNumber":38}],"oldStartLine":32,"oldStartLine2":null,"newStartLine":32,"header":"@@ -32,10 +32,7 @@ import java.io.IOException;"},{"lines":[{"content":"     public static WFSRequestBuilder getFeatureBuilderForUrl (String url) {","type":"context","oldNumber":48,"newNumber":45},{"content":" \treturn null;","type":"context","oldNumber":49,"newNumber":46},{"content":"     }","type":"context","oldNumber":50,"newNumber":47},{"content":"-    public static WFSRequestBuilder getFeatureBuilderForVersion (WFS.Version version) {","type":"delete","oldNumber":51},{"content":"-\tWFS.Version versionOrDefault = version != null ? version : DEFAULT_VERSION;","type":"delete","oldNumber":52},{"content":"+    public static GetFeatureBuilder getFeatureBuilderForVersion (WFSVersion version) {","type":"insert","newNumber":48},{"content":"+\tWFSVersion versionOrDefault = version != null ? version : DEFAULT_VERSION;","type":"insert","newNumber":49},{"content":" \treturn switch (versionOrDefault) {","type":"context","oldNumber":53,"newNumber":50},{"content":" \t    case v2 -> new GetFeatureBuilder2 ();","type":"context","oldNumber":54,"newNumber":51},{"content":" \t    case v110 -> new GetFeatureBuilder110 ();","type":"context","oldNumber":55,"newNumber":52}],"oldStartLine":48,"oldStartLine2":null,"newStartLine":45,"header":"@@ -48,8 +45,8 @@ public class WFS {"},{"lines":[{"content":"     public static WFSRequestBuilder getPropertyValueBuilderForUrl (String url) {","type":"context","oldNumber":60,"newNumber":57},{"content":" \treturn null;","type":"context","oldNumber":61,"newNumber":58},{"content":"     }","type":"context","oldNumber":62,"newNumber":59},{"content":"-    public static WFSRequestBuilder getPropertyValueBuilderForVersion (WFS.Version version) {","type":"delete","oldNumber":63},{"content":"-\tWFS.Version versionOrV2 = version != null ? version : Version.v2;","type":"delete","oldNumber":64},{"content":"+    public static WFSRequestBuilder getPropertyValueBuilderForVersion (WFSVersion version) {","type":"insert","newNumber":60},{"content":"+\tWFSVersion versionOrV2 = version != null ? version : WFSVersion.v2;","type":"insert","newNumber":61},{"content":" \treturn switch (versionOrV2) {","type":"context","oldNumber":65,"newNumber":62},{"content":" \t    case v2 -> new GetPropertyValueBuilder2 ();","type":"context","oldNumber":66,"newNumber":63},{"content":" \t    case v110 -> throw new UnsupportedOperationException (\"GetPropertyValue not supported in WFS \" + version);","type":"context","oldNumber":67,"newNumber":64}],"oldStartLine":60,"oldStartLine2":null,"newStartLine":57,"header":"@@ -60,8 +57,8 @@ public class WFS {"},{"lines":[{"content":"     }","type":"context","oldNumber":69,"newNumber":66},{"content":" ","type":"context","oldNumber":70,"newNumber":67},{"content":" ","type":"context","oldNumber":71,"newNumber":68},{"content":"-    public static WFSQueryBuilder getQueryBuilder (Version version) {","type":"delete","oldNumber":72},{"content":"+    public static WFSQueryBuilder getQueryBuilder (WFSVersion version) {","type":"insert","newNumber":69},{"content":" \treturn switch (version) {","type":"context","oldNumber":73,"newNumber":70},{"content":" \t    case v110 -> new QueryBuilder110 ();","type":"context","oldNumber":74,"newNumber":71},{"content":" \t    case v2 -> new QueryBuilder2 ();","type":"context","oldNumber":75,"newNumber":72}],"oldStartLine":69,"oldStartLine2":null,"newStartLine":66,"header":"@@ -69,7 +66,7 @@ public class WFS {"},{"lines":[{"content":" \t} else if (request instanceof WFSRequest110 req110) {","type":"context","oldNumber":104,"newNumber":101},{"content":" \t    if (req110 instanceof GetFeature110 getFeature110) {","type":"context","oldNumber":105,"newNumber":102},{"content":" \t\tJAXBElement<?> requestXML = req110.getXML ();","type":"context","oldNumber":106,"newNumber":103},{"content":"-\t\tvar response = WFSCommExecutor110.Post.getFeatureCollection (url, requestXML);","type":"delete","oldNumber":107},{"content":"-\t\t// THIS IS WROGN, TODO: this does type check but is always returning null","type":"delete","oldNumber":108},{"content":"-\t\treturn WFSResponseParser110.getFeatureResponse (response);","type":"delete","oldNumber":109},{"content":"+\t\tEither<net.opengis.wfs.v_1_1_0.FeatureCollectionType, net.opengis.ows.v_1_0_0.ExceptionReport> response;","type":"insert","newNumber":104},{"content":"+\t\tif (requestXML != null) {","type":"insert","newNumber":105},{"content":"+\t\t    response = WFSCommExecutor110.Post.getFeatureCollection (url, requestXML);","type":"insert","newNumber":106},{"content":"+\t\t} else {","type":"insert","newNumber":107},{"content":"+\t\t    response = WFSCommExecutor110.Get.getFeatureCollection (url);","type":"insert","newNumber":108},{"content":"+\t\t}","type":"insert","newNumber":109},{"content":"+","type":"insert","newNumber":110},{"content":"+\t\tif (response.leftPresent ()) {","type":"insert","newNumber":111},{"content":"+\t\t    var left = response.getLeft ();","type":"insert","newNumber":112},{"content":"+\t\t    return WFSResponseParser110.getFeatureResponse (left);","type":"insert","newNumber":113},{"content":"+","type":"insert","newNumber":114},{"content":"+\t\t} else if (response.rightPresent ()) {","type":"insert","newNumber":115},{"content":"+\t\t    var right = response.getRight ();","type":"insert","newNumber":116},{"content":"+\t\t    return WFSResponseParser110.getFeatureResponse (right);","type":"insert","newNumber":117},{"content":"+\t\t}","type":"insert","newNumber":118},{"content":" \t    }","type":"context","oldNumber":110,"newNumber":119},{"content":" \t}","type":"context","oldNumber":111,"newNumber":120},{"content":" ","type":"context","oldNumber":112,"newNumber":121}],"oldStartLine":104,"oldStartLine2":null,"newStartLine":101,"header":"@@ -104,9 +101,21 @@ public class WFS {"}],"deletedLines":12,"addedLines":21,"isGitDiff":true,"checksumBefore":"480efcfe717","checksumAfter":"b9e1f52455e","mode":"100644","oldName":"src/bios/plugin/web/wfs/WFS.java","language":"java","newName":"src/bios/plugin/web/wfs/WFS.java","isCombined":false},{"blocks":[{"lines":[{"content":" import bios.plugin.web.wfs.features.WFSFeatureType;","type":"context","oldNumber":3,"newNumber":3},{"content":" import bios.plugin.web.wfs.features.WFSFeatureTypeList;","type":"context","oldNumber":4,"newNumber":4},{"content":" import bios.plugin.web.wfs.operations.WFSOperation;","type":"context","oldNumber":5,"newNumber":5},{"content":"+import bios.plugin.web.wfs.operations.WFSOperationsMetadata;","type":"insert","newNumber":6},{"content":" import bios.plugin.web.wfs.wfs110.WFSCapabilities110;","type":"context","oldNumber":6,"newNumber":7},{"content":" import bios.plugin.web.wfs.wfs2.WFSCapabilities2;","type":"context","oldNumber":7,"newNumber":8},{"content":" ","type":"context","oldNumber":8,"newNumber":9}],"oldStartLine":3,"oldStartLine2":null,"newStartLine":3,"header":"@@ -3,6 +3,7 @@ package bios.plugin.web.wfs;"},{"lines":[{"content":"         return new WFSCapabilities110 (caps);","type":"context","oldNumber":24,"newNumber":25},{"content":"     }","type":"context","oldNumber":25,"newNumber":26},{"content":" ","type":"context","oldNumber":26,"newNumber":27},{"content":"-    public abstract List<WFSFeatureType> getFeatureTypes ();","type":"delete","oldNumber":27},{"content":"     public abstract List<QName> getFeatureTypeQNames ();","type":"context","oldNumber":28,"newNumber":28},{"content":"     public abstract String getServiceIdentificationTitle ();","type":"context","oldNumber":29,"newNumber":29},{"content":" ","type":"context","oldNumber":30,"newNumber":30}],"oldStartLine":24,"oldStartLine2":null,"newStartLine":25,"header":"@@ -24,7 +25,6 @@ public abstract class WFSCapabilitiesBase {"},{"lines":[{"content":"         return Optional.empty ();","type":"context","oldNumber":53,"newNumber":53},{"content":"     }","type":"context","oldNumber":54,"newNumber":54},{"content":" ","type":"context","oldNumber":55,"newNumber":55},{"content":"+    public List<WFSFeatureType> getFeatureTypes () {","type":"insert","newNumber":56},{"content":"+        return getFeatureTypeList ().map (WFSFeatureTypeList::getFeatureTypes).orElse (null);","type":"insert","newNumber":57},{"content":"+    }","type":"insert","newNumber":58},{"content":"+","type":"insert","newNumber":59},{"content":"     public Optional<WFSOperationsMetadata> getOperationsMetadata () {","type":"context","oldNumber":56,"newNumber":60},{"content":"         return Optional.empty ();","type":"context","oldNumber":57,"newNumber":61},{"content":"     }","type":"context","oldNumber":58,"newNumber":62},{"content":" ","type":"context","oldNumber":59,"newNumber":63},{"content":"-    public WFS.Version getVersion () {","type":"delete","oldNumber":60},{"content":"-        return WFS.Version.v110;","type":"delete","oldNumber":61},{"content":"+    public List<WFSOperation> getOperations () {","type":"insert","newNumber":64},{"content":"+        return getOperationsMetadata ().map (WFSOperationsMetadata::getOperations).orElse (null);","type":"insert","newNumber":65},{"content":"+    }","type":"insert","newNumber":66},{"content":"+","type":"insert","newNumber":67},{"content":"+    public WFSVersion getVersion () {","type":"insert","newNumber":68},{"content":"+        return WFSVersion.v110;","type":"insert","newNumber":69},{"content":"     }","type":"context","oldNumber":62,"newNumber":70},{"content":" ","type":"context","oldNumber":63,"newNumber":71},{"content":" }","type":"context","oldNumber":64,"newNumber":72}],"oldStartLine":53,"oldStartLine2":null,"newStartLine":53,"header":"@@ -53,12 +53,20 @@ public abstract class WFSCapabilitiesBase {"}],"deletedLines":3,"addedLines":11,"isGitDiff":true,"checksumBefore":"a56e334599d","checksumAfter":"403b01f9670","mode":"100644","oldName":"src/bios/plugin/web/wfs/WFSCapabilitiesBase.java","language":"java","newName":"src/bios/plugin/web/wfs/WFSCapabilitiesBase.java","isCombined":false},{"blocks":[{"lines":[{"content":" import bios.plugin.web.OGCMetadataHelper.GetProductClass;","type":"context","oldNumber":30,"newNumber":30},{"content":" import bios.plugin.web.SRSHelper;","type":"context","oldNumber":31,"newNumber":31},{"content":" import bios.plugin.web.wfs.features.WFSFeatureType;","type":"context","oldNumber":32,"newNumber":32},{"content":"+import bios.plugin.web.wfs.operations.WFSOperation;","type":"insert","newNumber":33},{"content":" import bios.plugin.web.wfs.wfs110.WFSResponseParser110_Old;","type":"context","oldNumber":33,"newNumber":34},{"content":" import dpgen.xsd.Schema;","type":"context","oldNumber":34,"newNumber":35},{"content":" import gnu.trove.list.TIntList;","type":"context","oldNumber":35,"newNumber":36}],"oldStartLine":30,"oldStartLine2":null,"newStartLine":30,"header":"@@ -30,6 +30,7 @@ import bios.plugin.web.OGCMetadataHelper;"},{"lines":[{"content":" \t}","type":"context","oldNumber":407,"newNumber":408},{"content":" \treturn SIMPLE_FEATURES_FORMAT;","type":"context","oldNumber":408,"newNumber":409},{"content":"     }","type":"context","oldNumber":409,"newNumber":410},{"content":"-    ","type":"delete","oldNumber":410},{"content":"+","type":"insert","newNumber":411},{"content":"+    // We assume that the first feature type has all the srs we need","type":"insert","newNumber":412},{"content":"     private List<String> parseSRS () {","type":"context","oldNumber":411,"newNumber":413},{"content":" \tWFSFeatureType ftt = capabilities.getFeatureTypes ().get (0);","type":"context","oldNumber":412,"newNumber":414},{"content":" \tList<String> srs = new ArrayList<> ();","type":"context","oldNumber":413,"newNumber":415}],"oldStartLine":407,"oldStartLine2":null,"newStartLine":408,"header":"@@ -407,7 +408,8 @@ public class WFSLoader extends ViewCreatedAdapter implements ExtraGraphicsLoader"},{"lines":[{"content":" \tsrs.addAll (ftt.getOtherSRS ());","type":"context","oldNumber":415,"newNumber":417},{"content":" \treturn srs;","type":"context","oldNumber":416,"newNumber":418},{"content":"     }","type":"context","oldNumber":417,"newNumber":419},{"content":"+","type":"insert","newNumber":420},{"content":"+    private static String getGetFeaturePOSTEndpoint (WFSCapabilitiesBase capabilities) {","type":"insert","newNumber":421},{"content":"+\treturn capabilities.getOperationsMetadata ().flatMap (","type":"insert","newNumber":422},{"content":"+\t\tmetadata -> metadata.getOperationByName (\"GetFeature\").map (WFSOperation::getPostEndpoint)).orElse (","type":"insert","newNumber":423},{"content":"+\t\tnull);","type":"insert","newNumber":424},{"content":"+    }","type":"insert","newNumber":425},{"content":"+","type":"insert","newNumber":426},{"content":"+    private String getGetFeaturePOSTEndpoint () {","type":"insert","newNumber":427},{"content":"+\treturn getGetFeaturePOSTEndpoint (capabilities);","type":"insert","newNumber":428},{"content":"+    }","type":"insert","newNumber":429},{"content":"     ","type":"context","oldNumber":418,"newNumber":430},{"content":"     private String getServiceUrl (String url, boolean useCapabilitiesUrl) {","type":"context","oldNumber":419,"newNumber":431},{"content":" \tif (useCapabilitiesUrl) {","type":"context","oldNumber":420,"newNumber":432},{"content":" \t    return url;","type":"context","oldNumber":421,"newNumber":433},{"content":" \t}","type":"context","oldNumber":422,"newNumber":434},{"content":" ","type":"context","oldNumber":423,"newNumber":435},{"content":"-\tString endpoint = capabilities.getGetFeaturePOSTEndpoint ();","type":"delete","oldNumber":424},{"content":"+\tString endpoint = getGetFeaturePOSTEndpoint ();","type":"insert","newNumber":436},{"content":" \tLog.print (\"Got endpoint: \" + endpoint);","type":"context","oldNumber":425,"newNumber":437},{"content":" \tif (!StringHelper.isNullOrEmpty (endpoint)) {","type":"context","oldNumber":426,"newNumber":438},{"content":" \t    return endpoint;","type":"context","oldNumber":427,"newNumber":439}],"oldStartLine":415,"oldStartLine2":null,"newStartLine":417,"header":"@@ -415,13 +417,23 @@ public class WFSLoader extends ViewCreatedAdapter implements ExtraGraphicsLoader"},{"lines":[{"content":" ","type":"context","oldNumber":712,"newNumber":724},{"content":" \tString srs = srsHelper.getSRS (toCs);","type":"context","oldNumber":713,"newNumber":725},{"content":" \tsrs = srsHelper.getFullSRSName (srs);","type":"context","oldNumber":714,"newNumber":726},{"content":"+","type":"insert","newNumber":727},{"content":"+\t/*","type":"insert","newNumber":728},{"content":"+","type":"insert","newNumber":729},{"content":"+\t\tList<WFSCapabilitiesBase> capabilities = GetCapabilitiesStrategy.getAll (\"url\");","type":"insert","newNumber":730},{"content":"+\t\tWFSCapabilitiesBase chosenCaps = VersionNegotiator.choose (capabilities, preference);","type":"insert","newNumber":731},{"content":"+","type":"insert","newNumber":732},{"content":"+\t\tWFSHandler handler = new WFSHandler (chosenCaps);","type":"insert","newNumber":733},{"content":"+\t\tList<WFSEndpoint> endpoints = WFSEndpointHelper.fromCapabilities (chosenCaps);","type":"insert","newNumber":734},{"content":"+\t\t// confa också?","type":"insert","newNumber":735},{"content":"+\t\t// tror handler måste ha att man VET vilken endpoint som ska användas","type":"insert","newNumber":736},{"content":"+\t\t// alltså att det är en Map/Set med endpoints vid det laget","type":"insert","newNumber":737},{"content":"+\t\thandler.setEndpoints (endpoints);","type":"insert","newNumber":738},{"content":"+","type":"insert","newNumber":739},{"content":"+\t\tGetFeatureResponse featureResponse = handler.getFeaturesInBBox (wantedFeatures, boundingBox);","type":"insert","newNumber":740},{"content":"+\t\tfeatureResponse.getResults ().stream ().map (ourFeatureParser);","type":"insert","newNumber":741},{"content":"+","type":"insert","newNumber":742},{"content":"+\t */","type":"insert","newNumber":743},{"content":" \ttry {","type":"context","oldNumber":715,"newNumber":744},{"content":" \t    List<GeometryComponent> ls = new ArrayList<> ();","type":"context","oldNumber":716,"newNumber":745},{"content":" \t    Document doc = getDocument (rectTrans, srs);","type":"context","oldNumber":717,"newNumber":746}],"oldStartLine":712,"oldStartLine2":null,"newStartLine":724,"header":"@@ -712,6 +724,23 @@ public class WFSLoader extends ViewCreatedAdapter implements ExtraGraphicsLoader"}],"deletedLines":2,"addedLines":31,"isGitDiff":true,"checksumBefore":"c0b15bd6a88","checksumAfter":"67a9b285525","mode":"100644","oldName":"src/bios/plugin/web/wfs/WFSLoader.java","language":"java","newName":"src/bios/plugin/web/wfs/WFSLoader.java","isCombined":false},{"blocks":[{"lines":[{"content":"     public String getCommonName () {","type":"context","oldNumber":11,"newNumber":11},{"content":"         return commonName;","type":"context","oldNumber":12,"newNumber":12},{"content":"     }","type":"context","oldNumber":13,"newNumber":13},{"content":"+","type":"insert","newNumber":14},{"content":"+    public static WFSOperationType find (String commonName) {","type":"insert","newNumber":15},{"content":"+        for (WFSOperationType opType : values ()) {","type":"insert","newNumber":16},{"content":"+            if (opType.getCommonName ().equals (commonName)) {","type":"insert","newNumber":17},{"content":"+                return opType;","type":"insert","newNumber":18},{"content":"+            }","type":"insert","newNumber":19},{"content":"+        }","type":"insert","newNumber":20},{"content":"+        return null;","type":"insert","newNumber":21},{"content":"+    }","type":"insert","newNumber":22},{"content":"+","type":"insert","newNumber":23},{"content":"+","type":"insert","newNumber":24},{"content":" }","type":"context","oldNumber":14,"newNumber":25}],"oldStartLine":11,"oldStartLine2":null,"newStartLine":11,"header":"@@ -11,4 +11,15 @@ public enum WFSOperationType {"}],"deletedLines":0,"addedLines":11,"isGitDiff":true,"checksumBefore":"c1a8a7d8800","checksumAfter":"7dc95febc13","mode":"100644","oldName":"src/bios/plugin/web/wfs/WFSOperationType.java","language":"java","newName":"src/bios/plugin/web/wfs/WFSOperationType.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.builders;public class GetCapabilitiesBuilder {","type":"delete","oldNumber":1},{"content":"+package bios.plugin.web.wfs.builders;","type":"insert","newNumber":1},{"content":"+","type":"insert","newNumber":2},{"content":"+import bios.plugin.web.wfs.WFSVersion;","type":"insert","newNumber":3},{"content":"+import bios.plugin.web.wfs.requests.GetCapabilities110;","type":"insert","newNumber":4},{"content":"+import bios.plugin.web.wfs.requests.GetCapabilities2;","type":"insert","newNumber":5},{"content":"+import bios.plugin.web.wfs.requests.WFSRequest;","type":"insert","newNumber":6},{"content":"+import jakarta.xml.bind.JAXBElement;","type":"insert","newNumber":7},{"content":"+","type":"insert","newNumber":8},{"content":"+public class GetCapabilitiesBuilder implements WFSRequestBuilder {","type":"insert","newNumber":9},{"content":"+","type":"insert","newNumber":10},{"content":"+    private final WFSVersion version;","type":"insert","newNumber":11},{"content":"+","type":"insert","newNumber":12},{"content":"+    public GetCapabilitiesBuilder (WFSVersion version) {","type":"insert","newNumber":13},{"content":"+\tthis.version = version;","type":"insert","newNumber":14},{"content":"+    }","type":"insert","newNumber":15},{"content":"+","type":"insert","newNumber":16},{"content":"+    @Override","type":"insert","newNumber":17},{"content":"+    public WFSRequest build () {","type":"insert","newNumber":18},{"content":"+\treturn switch (version) {","type":"insert","newNumber":19},{"content":"+\t    case v2 -> {","type":"insert","newNumber":20},{"content":"+\t\tWFSXMLRequestBuilder2 builder = new WFSXMLRequestBuilder2 ();","type":"insert","newNumber":21},{"content":"+\t\tJAXBElement<?> xml = builder.buildGetCapabilitiesRequest ();","type":"insert","newNumber":22},{"content":"+\t\tyield new GetCapabilities2 (xml);","type":"insert","newNumber":23},{"content":"+\t    }","type":"insert","newNumber":24},{"content":"+","type":"insert","newNumber":25},{"content":"+\t    case v110 -> {","type":"insert","newNumber":26},{"content":"+\t\tWFSXMLRequestBuilder110 builder = new WFSXMLRequestBuilder110 ();","type":"insert","newNumber":27},{"content":"+\t\tJAXBElement<?> xml = builder.buildGetCapabilitiesRequest ();","type":"insert","newNumber":28},{"content":"+\t\tyield new GetCapabilities110 (xml);","type":"insert","newNumber":29},{"content":"+\t    }","type":"insert","newNumber":30},{"content":"+\t};","type":"insert","newNumber":31},{"content":"+    }","type":"insert","newNumber":32},{"content":" }","type":"context","oldNumber":2,"newNumber":33}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,2 +1,33 @@"}],"deletedLines":1,"addedLines":32,"isGitDiff":true,"checksumBefore":"e3cb95b0833","checksumAfter":"22b9f8fdf23","mode":"100644","oldName":"src/bios/plugin/web/wfs/builders/GetCapabilitiesBuilder.java","language":"java","newName":"src/bios/plugin/web/wfs/builders/GetCapabilitiesBuilder.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.builders;public class GetFeatureBuilder {","type":"delete","oldNumber":1},{"content":"+package bios.plugin.web.wfs.builders;","type":"insert","newNumber":1},{"content":"+","type":"insert","newNumber":2},{"content":"+import bios.plugin.web.wfs.queries.Query;","type":"insert","newNumber":3},{"content":"+","type":"insert","newNumber":4},{"content":"+public abstract class GetFeatureBuilder implements WFSRequestBuilder {","type":"insert","newNumber":5},{"content":"+    public abstract GetFeatureBuilder setFormat (String format);","type":"insert","newNumber":6},{"content":"+    public abstract GetFeatureBuilder addQuery (Query query);","type":"insert","newNumber":7},{"content":"+    public abstract GetFeatureBuilder maxCount (Integer maxCount);","type":"insert","newNumber":8},{"content":" }","type":"context","oldNumber":2,"newNumber":9}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,2 +1,9 @@"}],"deletedLines":1,"addedLines":8,"isGitDiff":true,"checksumBefore":"040f90b18e4","checksumAfter":"4f3e954ccd3","mode":"100644","oldName":"src/bios/plugin/web/wfs/builders/GetFeatureBuilder.java","language":"java","newName":"src/bios/plugin/web/wfs/builders/GetFeatureBuilder.java","isCombined":false},{"blocks":[{"lines":[{"content":"  *","type":"context","oldNumber":13,"newNumber":13},{"content":"  * @author <a href=\"mailto:jakob.kratz@digpro.se\">Jakob Kratz</a>, Digpro AB","type":"context","oldNumber":14,"newNumber":14},{"content":"  */","type":"context","oldNumber":15,"newNumber":15},{"content":"-public class GetFeatureBuilder110 implements WFSRequestBuilder {","type":"delete","oldNumber":16},{"content":"+public class GetFeatureBuilder110 extends GetFeatureBuilder implements WFSRequestBuilder {","type":"insert","newNumber":16},{"content":" ","type":"context","oldNumber":17,"newNumber":17},{"content":"     private String format = SIMPLE_FEATURES_FORMAT;","type":"context","oldNumber":18,"newNumber":18},{"content":"     private Integer maxCount = null; // interprets null as no limit","type":"context","oldNumber":19,"newNumber":19}],"oldStartLine":13,"oldStartLine2":null,"newStartLine":13,"header":"@@ -13,7 +13,7 @@ import java.util.List;"},{"lines":[{"content":" \treturn new GetFeature110 (requestXml);","type":"context","oldNumber":40,"newNumber":40},{"content":"     }","type":"context","oldNumber":41,"newNumber":41},{"content":" ","type":"context","oldNumber":42,"newNumber":42},{"content":"+    @Override","type":"insert","newNumber":43},{"content":"     public GetFeatureBuilder110 setFormat (String format) {","type":"context","oldNumber":43,"newNumber":44},{"content":" \tthis.format = format;","type":"context","oldNumber":44,"newNumber":45},{"content":" \treturn this;","type":"context","oldNumber":45,"newNumber":46},{"content":"     }","type":"context","oldNumber":46,"newNumber":47},{"content":" ","type":"context","oldNumber":47,"newNumber":48},{"content":"+    @Override","type":"insert","newNumber":49},{"content":"     public GetFeatureBuilder110 addQuery (Query query) {","type":"context","oldNumber":48,"newNumber":50},{"content":" \tqueries.add (query);","type":"context","oldNumber":49,"newNumber":51},{"content":" \treturn this;","type":"context","oldNumber":50,"newNumber":52},{"content":"     }","type":"context","oldNumber":51,"newNumber":53},{"content":" ","type":"context","oldNumber":52,"newNumber":54},{"content":"+    @Override","type":"insert","newNumber":55},{"content":"     public GetFeatureBuilder110 maxCount (Integer maxCount) {","type":"context","oldNumber":53,"newNumber":56},{"content":" \tthis.maxCount = maxCount;","type":"context","oldNumber":54,"newNumber":57},{"content":" \treturn this;","type":"context","oldNumber":55,"newNumber":58}],"oldStartLine":40,"oldStartLine2":null,"newStartLine":40,"header":"@@ -40,16 +40,19 @@ public class GetFeatureBuilder110 implements WFSRequestBuilder {"}],"deletedLines":1,"addedLines":4,"isGitDiff":true,"checksumBefore":"128513c9ae0","checksumAfter":"4d8413d1752","mode":"100644","oldName":"src/bios/plugin/web/wfs/builders/GetFeatureBuilder110.java","language":"java","newName":"src/bios/plugin/web/wfs/builders/GetFeatureBuilder110.java","isCombined":false},{"blocks":[{"lines":[{"content":"  *","type":"context","oldNumber":16,"newNumber":16},{"content":"  * @author <a href=\"mailto:jakob.kratz@digpro.se\">Jakob Kratz</a>, Digpro AB","type":"context","oldNumber":17,"newNumber":17},{"content":"  */","type":"context","oldNumber":18,"newNumber":18},{"content":"-public class GetFeatureBuilder2 implements WFSRequestBuilder {","type":"delete","oldNumber":19},{"content":"+public class GetFeatureBuilder2 extends GetFeatureBuilder implements WFSRequestBuilder {","type":"insert","newNumber":19},{"content":" ","type":"context","oldNumber":20,"newNumber":20},{"content":"     private String format = SIMPLE_FEATURES_FORMAT;","type":"context","oldNumber":21,"newNumber":21},{"content":"     private Integer maxCount = null; // interprets null as no limit","type":"context","oldNumber":22,"newNumber":22}],"oldStartLine":16,"oldStartLine2":null,"newStartLine":16,"header":"@@ -16,7 +16,7 @@ import java.util.Map;"},{"lines":[{"content":" \treturn queries != null && !queries.isEmpty ();","type":"context","oldNumber":45,"newNumber":45},{"content":"     }","type":"context","oldNumber":46,"newNumber":46},{"content":" ","type":"context","oldNumber":47,"newNumber":47},{"content":"+    @Override","type":"insert","newNumber":48},{"content":"     public GetFeatureBuilder2 setFormat (String format) {","type":"context","oldNumber":48,"newNumber":49},{"content":" \tthis.format = format;","type":"context","oldNumber":49,"newNumber":50},{"content":" \treturn this;","type":"context","oldNumber":50,"newNumber":51},{"content":"     }","type":"context","oldNumber":51,"newNumber":52},{"content":" ","type":"context","oldNumber":52,"newNumber":53},{"content":"+    @Override","type":"insert","newNumber":54},{"content":"     public GetFeatureBuilder2 addQuery (Query query) {","type":"context","oldNumber":53,"newNumber":55},{"content":" \tqueries.add (query);","type":"context","oldNumber":54,"newNumber":56},{"content":" \treturn this;","type":"context","oldNumber":55,"newNumber":57},{"content":"     }","type":"context","oldNumber":56,"newNumber":58},{"content":" ","type":"context","oldNumber":57,"newNumber":59},{"content":"+    @Override","type":"insert","newNumber":60},{"content":"     public GetFeatureBuilder2 maxCount (Integer maxCount) {","type":"context","oldNumber":58,"newNumber":61},{"content":" \tthis.maxCount = maxCount;","type":"context","oldNumber":59,"newNumber":62},{"content":" \treturn this;","type":"context","oldNumber":60,"newNumber":63}],"oldStartLine":45,"oldStartLine2":null,"newStartLine":45,"header":"@@ -45,16 +45,19 @@ public class GetFeatureBuilder2 implements WFSRequestBuilder {"}],"deletedLines":1,"addedLines":4,"isGitDiff":true,"checksumBefore":"2786261e2e4","checksumAfter":"05f5fdcba89","mode":"100644","oldName":"src/bios/plugin/web/wfs/builders/GetFeatureBuilder2.java","language":"java","newName":"src/bios/plugin/web/wfs/builders/GetFeatureBuilder2.java","isCombined":false},{"blocks":[{"lines":[{"content":" import net.opengis.gml.v_3_1_1.DirectPositionType;","type":"context","oldNumber":16,"newNumber":16},{"content":" import net.opengis.gml.v_3_1_1.EnvelopeType;","type":"context","oldNumber":17,"newNumber":17},{"content":" import net.opengis.gml.v_3_1_1.ObjectFactory;","type":"context","oldNumber":18,"newNumber":18},{"content":"+import net.opengis.ows.v_1_0_0.AcceptVersionsType;","type":"insert","newNumber":19},{"content":" import net.opengis.wfs.v_1_1_0.DescribeFeatureTypeType;","type":"context","oldNumber":19,"newNumber":20},{"content":" import net.opengis.wfs.v_1_1_0.GetFeatureType;","type":"context","oldNumber":20,"newNumber":21},{"content":" import net.opengis.wfs.v_1_1_0.QueryType;","type":"context","oldNumber":21,"newNumber":22}],"oldStartLine":16,"oldStartLine2":null,"newStartLine":16,"header":"@@ -16,6 +16,7 @@ import net.opengis.filter.v_1_1_0.PropertyNameType;"},{"lines":[{"content":" \treturn bbox;","type":"context","oldNumber":170,"newNumber":171},{"content":"     }","type":"context","oldNumber":171,"newNumber":172},{"content":" ","type":"context","oldNumber":172,"newNumber":173},{"content":"-    private void loadSchema (String url, SProperties props) {","type":"delete","oldNumber":173},{"content":"-\tString schemaUrl = url + \"request=DescribeFeatureType&service=WFS&version=1.1.0\";","type":"delete","oldNumber":174},{"content":"-\tint timeout = props.getInt (\"timeout\", 10000);","type":"delete","oldNumber":175},{"content":"-","type":"delete","oldNumber":176},{"content":"-\tInputStream is = null;","type":"delete","oldNumber":177},{"content":"-\ttry {","type":"delete","oldNumber":178},{"content":"-\t    URL u = new URL (schemaUrl);","type":"delete","oldNumber":179},{"content":"-\t    URLConnection conn = u.openConnection ();","type":"delete","oldNumber":180},{"content":"-","type":"delete","oldNumber":181},{"content":"-\t    conn.setConnectTimeout (timeout);","type":"delete","oldNumber":182},{"content":"-\t    conn.setReadTimeout (timeout);","type":"delete","oldNumber":183},{"content":"-\t    is = conn.getInputStream ();","type":"delete","oldNumber":184},{"content":"-\t    JAXBContext jc = JAXBContextCache.getInstance ().getContext (\"dpgen.xsd\");","type":"delete","oldNumber":185},{"content":"-","type":"delete","oldNumber":186},{"content":"-\t    InputStream bis = new ByteArrayInputStream (is.readAllBytes ());","type":"delete","oldNumber":187},{"content":"-\t    Schema serviceSchema = (Schema) jc.createUnmarshaller ().unmarshal (bis);","type":"delete","oldNumber":188},{"content":"-\t    bis.reset ();","type":"delete","oldNumber":189},{"content":"-","type":"delete","oldNumber":190},{"content":"-\t} catch (Exception e) {","type":"delete","oldNumber":191},{"content":"-\t    // We do not want tests to fail just because some external server is down.","type":"delete","oldNumber":192},{"content":"-\t    Log.printStackTraceUnlessTesting (e);","type":"delete","oldNumber":193},{"content":"-\t} finally {","type":"delete","oldNumber":194},{"content":"-\t    Closer.close (is);","type":"delete","oldNumber":195},{"content":"-\t}","type":"delete","oldNumber":196},{"content":"-    }","type":"delete","oldNumber":197},{"content":"-","type":"delete","oldNumber":198},{"content":"     @Override","type":"context","oldNumber":199,"newNumber":174},{"content":"     public JAXBElement<?> buildGetPropertyValueRequest (CoordRectangle rectTrans, String srs, boolean swapAxis,","type":"context","oldNumber":200,"newNumber":175},{"content":" \t\t\t\t\t\t\tList<QName> wantedFeatureNames) {","type":"context","oldNumber":201,"newNumber":176}],"oldStartLine":170,"oldStartLine2":null,"newStartLine":171,"header":"@@ -170,32 +171,6 @@ public final class WFSXMLRequestBuilder110 extends WFSXMLRequestBuilder {"},{"lines":[{"content":"     @Override","type":"context","oldNumber":225,"newNumber":200},{"content":"     public JAXBElement<?> buildGetCapabilitiesRequest () {","type":"context","oldNumber":226,"newNumber":201},{"content":" \tnet.opengis.wfs.v_1_1_0.ObjectFactory of = new net.opengis.wfs.v_1_1_0.ObjectFactory ();","type":"context","oldNumber":227,"newNumber":202},{"content":"+\tnet.opengis.ows.v_1_0_0.ObjectFactory owsOf = new net.opengis.ows.v_1_0_0.ObjectFactory ();","type":"insert","newNumber":203},{"content":" \tnet.opengis.wfs.v_1_1_0.GetCapabilitiesType gct = new net.opengis.wfs.v_1_1_0.GetCapabilitiesType ();","type":"context","oldNumber":228,"newNumber":204},{"content":"+\tAcceptVersionsType acceptVersionsType = owsOf.createAcceptVersionsType ();","type":"insert","newNumber":205},{"content":"+\tacceptVersionsType.getVersion ().add (\"1.1.0\");","type":"insert","newNumber":206},{"content":"+\tgct.setAcceptVersions (acceptVersionsType);","type":"insert","newNumber":207},{"content":" \tgct.setService (\"WFS\");","type":"context","oldNumber":229,"newNumber":208},{"content":" \treturn of.createGetCapabilities (gct);","type":"context","oldNumber":230,"newNumber":209},{"content":"     }","type":"context","oldNumber":231,"newNumber":210}],"oldStartLine":225,"oldStartLine2":null,"newStartLine":200,"header":"@@ -225,7 +200,11 @@ public final class WFSXMLRequestBuilder110 extends WFSXMLRequestBuilder {"}],"deletedLines":26,"addedLines":5,"isGitDiff":true,"checksumBefore":"63d51c70764","checksumAfter":"18b8d6159c9","mode":"100644","oldName":"src/bios/plugin/web/wfs/builders/WFSXMLRequestBuilder110.java","language":"java","newName":"src/bios/plugin/web/wfs/builders/WFSXMLRequestBuilder110.java","isCombined":false},{"blocks":[{"lines":[{"content":" import net.opengis.filter.v_2_0.UnaryLogicOpType;","type":"context","oldNumber":9,"newNumber":9},{"content":" import net.opengis.gml.v_3_1_1.DirectPositionType;","type":"context","oldNumber":10,"newNumber":10},{"content":" import net.opengis.gml.v_3_1_1.EnvelopeType;","type":"context","oldNumber":11,"newNumber":11},{"content":"+import net.opengis.ows.v_1_1_0.AcceptVersionsType;","type":"insert","newNumber":12},{"content":"+import net.opengis.ows.v_1_1_0.ObjectFactory;","type":"insert","newNumber":13},{"content":" import net.opengis.wfs.v_2_0.BaseRequestType;","type":"context","oldNumber":12,"newNumber":14},{"content":" import net.opengis.wfs.v_2_0.GetPropertyValueType;","type":"context","oldNumber":13,"newNumber":15},{"content":" import net.opengis.wfs.v_2_0.QueryType;","type":"context","oldNumber":14,"newNumber":16}],"oldStartLine":9,"oldStartLine2":null,"newStartLine":9,"header":"@@ -9,6 +9,8 @@ import net.opengis.filter.v_2_0.FilterType;"},{"lines":[{"content":"     public JAXBElement<?> buildGetCapabilitiesRequest () {","type":"context","oldNumber":263,"newNumber":265},{"content":" \tnet.opengis.wfs.v_2_0.ObjectFactory of = new net.opengis.wfs.v_2_0.ObjectFactory ();","type":"context","oldNumber":264,"newNumber":266},{"content":" \tnet.opengis.wfs.v_2_0.GetCapabilitiesType gct = new net.opengis.wfs.v_2_0.GetCapabilitiesType ();","type":"context","oldNumber":265,"newNumber":267},{"content":"+\tnet.opengis.ows.v_1_1_0.ObjectFactory owsOf = new ObjectFactory ();","type":"insert","newNumber":268},{"content":"+\tAcceptVersionsType acceptVersionsType = owsOf.createAcceptVersionsType ();","type":"insert","newNumber":269},{"content":"+\tacceptVersionsType.getVersion ().add (\"2.0.0\");","type":"insert","newNumber":270},{"content":"+\tgct.setAcceptVersions (acceptVersionsType);","type":"insert","newNumber":271},{"content":" \treturn of.createGetCapabilities (gct);","type":"context","oldNumber":266,"newNumber":272},{"content":"     }","type":"context","oldNumber":267,"newNumber":273},{"content":" ","type":"context","oldNumber":268,"newNumber":274}],"oldStartLine":263,"oldStartLine2":null,"newStartLine":265,"header":"@@ -263,6 +265,10 @@ public final class WFSXMLRequestBuilder2 extends WFSXMLRequestBuilder {"}],"deletedLines":0,"addedLines":6,"isGitDiff":true,"checksumBefore":"9d76a418880","checksumAfter":"79f89462c3a","mode":"100644","oldName":"src/bios/plugin/web/wfs/builders/WFSXMLRequestBuilder2.java","language":"java","newName":"src/bios/plugin/web/wfs/builders/WFSXMLRequestBuilder2.java","isCombined":false},{"blocks":[{"lines":[{"content":" ","type":"context","oldNumber":31,"newNumber":31},{"content":" public abstract class WFSCommExecutor {","type":"context","oldNumber":32,"newNumber":32},{"content":" ","type":"context","oldNumber":33,"newNumber":33},{"content":"-    // TODO:","type":"delete","oldNumber":34},{"content":"-    @Deprecated","type":"delete","oldNumber":35},{"content":"-    public static <L, R> Either<L, R> getUnsafe (String url, Class<L> leftClass, Class<R> rightClass)","type":"delete","oldNumber":36},{"content":"-    throws JAXBException, IOException {","type":"delete","oldNumber":37},{"content":"-        List<Class<?>> receiverClasses = List.of (leftClass, rightClass);","type":"delete","oldNumber":38},{"content":"-        Object o = makeGetRequestAndGetObject (url, contextForClasses (receiverClasses));","type":"delete","oldNumber":39},{"content":"-        if (o.getClass () == leftClass) {","type":"delete","oldNumber":40},{"content":"-            return Either.left (leftClass.cast (o));","type":"delete","oldNumber":41},{"content":"-        } else if (o.getClass () == rightClass) {","type":"delete","oldNumber":42},{"content":"-            return Either.right (rightClass.cast (o));","type":"delete","oldNumber":43},{"content":"-        }","type":"delete","oldNumber":44},{"content":"-        return Either.empty ();","type":"delete","oldNumber":45},{"content":"-    }","type":"delete","oldNumber":46},{"content":"-","type":"delete","oldNumber":47},{"content":"     public static <L, R> Either<L, R> getEitherOrEmpty (Object o, Class<L> leftClass, Class<R> rightClass) {","type":"context","oldNumber":48,"newNumber":34},{"content":"         if (o.getClass () == leftClass) {","type":"context","oldNumber":49,"newNumber":35},{"content":"             return Either.left (leftClass.cast (o));","type":"context","oldNumber":50,"newNumber":36}],"oldStartLine":31,"oldStartLine2":null,"newStartLine":31,"header":"@@ -31,20 +31,6 @@ import static bios.plugin.web.wfs.communication.XMLRequestHelper.sendAndReceiveX"}],"deletedLines":14,"addedLines":0,"isGitDiff":true,"checksumBefore":"90952f3642a","checksumAfter":"3dec4589627","mode":"100644","oldName":"src/bios/plugin/web/wfs/communication/WFSCommExecutor.java","language":"java","newName":"src/bios/plugin/web/wfs/communication/WFSCommExecutor.java","isCombined":false},{"blocks":[{"lines":[{"content":"      * Functions that cause GET requests.","type":"context","oldNumber":34,"newNumber":34},{"content":"      */","type":"context","oldNumber":35,"newNumber":35},{"content":"     public static class Get {","type":"context","oldNumber":36,"newNumber":36},{"content":"+","type":"insert","newNumber":37},{"content":"+\tpublic static <L,R> Either<L, R> getEither (String url, Class<L> leftClass, Class<R> rightClass) throws JAXBException, IOException {","type":"insert","newNumber":38},{"content":"+\t    List<Class<?>> receiverClasses = List.of (leftClass, rightClass);","type":"insert","newNumber":39},{"content":"+\t    Object response = makeGetRequestAndGetObject (url, receiverClasses);","type":"insert","newNumber":40},{"content":"+","type":"insert","newNumber":41},{"content":"+\t    if (response.getClass () == rightClass) {","type":"insert","newNumber":42},{"content":"+\t\treturn Either.right (rightClass.cast (response));","type":"insert","newNumber":43},{"content":"+\t    } else if (response.getClass () == leftClass) {","type":"insert","newNumber":44},{"content":"+\t\treturn Either.left (leftClass.cast (response));","type":"insert","newNumber":45},{"content":"+\t    }","type":"insert","newNumber":46},{"content":"+","type":"insert","newNumber":47},{"content":"+\t    return Either.empty ();","type":"insert","newNumber":48},{"content":"+\t}","type":"insert","newNumber":49},{"content":"+","type":"insert","newNumber":50},{"content":" \tpublic static Either<WFSCapabilitiesType, ExceptionReport> getCapabilities (String url) throws JAXBException, IOException {","type":"context","oldNumber":37,"newNumber":51},{"content":" \t    List<Class<?>> receiverClasses = List.of (ExceptionReport.class, WFSCapabilitiesType.class);","type":"context","oldNumber":38,"newNumber":52},{"content":" \t    Object response = makeGetRequestAndGetObject (url, receiverClasses);","type":"context","oldNumber":39,"newNumber":53}],"oldStartLine":34,"oldStartLine2":null,"newStartLine":34,"header":"@@ -34,6 +34,20 @@ public final class WFSCommExecutor2 extends WFSCommExecutor {"}],"deletedLines":0,"addedLines":14,"isGitDiff":true,"checksumBefore":"6327b2cd1ce","checksumAfter":"6359d4b1b33","mode":"100644","oldName":"src/bios/plugin/web/wfs/communication/WFSCommExecutor2.java","language":"java","newName":"src/bios/plugin/web/wfs/communication/WFSCommExecutor2.java","isCombined":false},{"blocks":[{"lines":[{"content":" ","type":"context","oldNumber":41,"newNumber":41},{"content":"     public static <R> R getAndReceiveXML (String url, JAXBContext receiveContext, boolean gzipResponse)","type":"context","oldNumber":42,"newNumber":42},{"content":"     throws JAXBException, IOException {","type":"context","oldNumber":43,"newNumber":43},{"content":"-","type":"delete","oldNumber":44},{"content":"+\tLog.print (\"Performing a get request to: \" + url);","type":"insert","newNumber":44},{"content":" \t// open connection and send an xml document as a get request","type":"context","oldNumber":45,"newNumber":45},{"content":" \tHttpURLConnection conn = openXMLGetConnection (url, gzipResponse);","type":"context","oldNumber":46,"newNumber":46},{"content":" \tint status = awaitResponse (conn);","type":"context","oldNumber":47,"newNumber":47}],"oldStartLine":41,"oldStartLine2":null,"newStartLine":41,"header":"@@ -41,7 +41,7 @@ public class XMLRequestHelper {"}],"deletedLines":1,"addedLines":1,"isGitDiff":true,"checksumBefore":"070412e7a5a","checksumAfter":"c8830740cee","mode":"100644","oldName":"src/bios/plugin/web/wfs/communication/XMLRequestHelper.java","language":"java","newName":"src/bios/plugin/web/wfs/communication/XMLRequestHelper.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.compatibility;public class GetCapabilitiesStrategy {","type":"delete","oldNumber":1},{"content":"+package bios.plugin.web.wfs.compatibility;","type":"insert","newNumber":1},{"content":"+","type":"insert","newNumber":2},{"content":"+import bios.jcommon.Log;","type":"insert","newNumber":3},{"content":"+import bios.jcommon.functional.throwing.ThrowingSupplier;","type":"insert","newNumber":4},{"content":"+import bios.plugin.web.wfs.RequestMethod;","type":"insert","newNumber":5},{"content":"+import bios.plugin.web.wfs.WFS;","type":"insert","newNumber":6},{"content":"+import bios.plugin.web.wfs.WFSCapabilitiesBase;","type":"insert","newNumber":7},{"content":"+import bios.plugin.web.wfs.WFSVersion;","type":"insert","newNumber":8},{"content":"+import bios.plugin.web.wfs.builders.GetCapabilitiesBuilder;","type":"insert","newNumber":9},{"content":"+import bios.plugin.web.wfs.communication.WFSCommExecutor110;","type":"insert","newNumber":10},{"content":"+import bios.plugin.web.wfs.communication.WFSCommExecutor2;","type":"insert","newNumber":11},{"content":"+import bios.plugin.web.wfs.getrequests.GetCapabilitiesRequest;","type":"insert","newNumber":12},{"content":"+import bios.plugin.web.wfs.parsing.WFSResponseParser110;","type":"insert","newNumber":13},{"content":"+import bios.plugin.web.wfs.parsing.WFSResponseParser2;","type":"insert","newNumber":14},{"content":"+import bios.plugin.web.wfs.requests.WFSRequest;","type":"insert","newNumber":15},{"content":"+import bios.plugin.web.wfs.responses.BaseResponse;","type":"insert","newNumber":16},{"content":"+import bios.plugin.web.wfs.responses.WFSResponse;","type":"insert","newNumber":17},{"content":"+import jakarta.xml.bind.JAXBException;","type":"insert","newNumber":18},{"content":"+","type":"insert","newNumber":19},{"content":"+import java.io.IOException;","type":"insert","newNumber":20},{"content":"+import java.util.ArrayList;","type":"insert","newNumber":21},{"content":"+import java.util.List;","type":"insert","newNumber":22},{"content":"+import java.util.Objects;","type":"insert","newNumber":23},{"content":"+import java.util.Optional;","type":"insert","newNumber":24},{"content":"+","type":"insert","newNumber":25},{"content":"+import static bios.plugin.web.wfs.getrequests.GetRequestHelper.getUrlWithoutQuery;","type":"insert","newNumber":26},{"content":"+","type":"insert","newNumber":27},{"content":"+public class GetCapabilitiesStrategy {","type":"insert","newNumber":28},{"content":"+    public static Optional<WFSCapabilitiesBase> requestGetCapabilities (String url) {","type":"insert","newNumber":29},{"content":"+\tfor (WFSVersion version : WFSVersion.values ()) {","type":"insert","newNumber":30},{"content":"+\t    Optional<WFSCapabilitiesBase> maybeGetCaps = requestGetCapabilities (url, version);","type":"insert","newNumber":31},{"content":"+\t    if (maybeGetCaps.isPresent ()) {","type":"insert","newNumber":32},{"content":"+\t\treturn maybeGetCaps;","type":"insert","newNumber":33},{"content":"+\t    }","type":"insert","newNumber":34},{"content":"+\t}","type":"insert","newNumber":35},{"content":"+","type":"insert","newNumber":36},{"content":"+\treturn Optional.empty ();","type":"insert","newNumber":37},{"content":"+    }","type":"insert","newNumber":38},{"content":"+","type":"insert","newNumber":39},{"content":"+    public static Optional<List<WFSCapabilitiesBase>> requestAllGetCapabilities (String url) {","type":"insert","newNumber":40},{"content":"+\tList<WFSCapabilitiesBase> results = new ArrayList<> ();","type":"insert","newNumber":41},{"content":"+\tfor (WFSVersion version : WFSVersion.values ()) {","type":"insert","newNumber":42},{"content":"+\t    Optional<List<WFSCapabilitiesBase>> capsList = getMultipleGetCapabilities (url, version);","type":"insert","newNumber":43},{"content":"+\t    capsList.ifPresent (results::addAll);","type":"insert","newNumber":44},{"content":"+\t}","type":"insert","newNumber":45},{"content":"+\tif (!results.isEmpty ()) {","type":"insert","newNumber":46},{"content":"+\t    return Optional.of (results);","type":"insert","newNumber":47},{"content":"+\t}","type":"insert","newNumber":48},{"content":"+","type":"insert","newNumber":49},{"content":"+\treturn Optional.empty ();","type":"insert","newNumber":50},{"content":"+    }","type":"insert","newNumber":51},{"content":"+","type":"insert","newNumber":52},{"content":"+    @SafeVarargs","type":"insert","newNumber":53},{"content":"+    private static <R, X extends Exception> R getFirstNonThrowing (ThrowingSupplier<R, X>... suppliers) {","type":"insert","newNumber":54},{"content":"+\tfor (var supplier : suppliers) {","type":"insert","newNumber":55},{"content":"+\t    try {","type":"insert","newNumber":56},{"content":"+\t\treturn supplier.getThrowing ();","type":"insert","newNumber":57},{"content":"+\t    } catch (Exception e) {","type":"insert","newNumber":58},{"content":"+\t\t// intentionally empty","type":"insert","newNumber":59},{"content":"+\t\tLog.printStackTrace (e);","type":"insert","newNumber":60},{"content":"+\t    }","type":"insert","newNumber":61},{"content":"+\t}","type":"insert","newNumber":62},{"content":"+\treturn null;","type":"insert","newNumber":63},{"content":"+    }","type":"insert","newNumber":64},{"content":"+","type":"insert","newNumber":65},{"content":"+    @SafeVarargs","type":"insert","newNumber":66},{"content":"+    private static <R, X extends Exception> List<R> getAllNonThrowing (ThrowingSupplier<R, X>... suppliers) {","type":"insert","newNumber":67},{"content":"+\tList<R> results = new ArrayList<> ();","type":"insert","newNumber":68},{"content":"+\tfor (var supplier : suppliers) {","type":"insert","newNumber":69},{"content":"+\t    try {","type":"insert","newNumber":70},{"content":"+\t\tresults.add (supplier.getThrowing ());","type":"insert","newNumber":71},{"content":"+\t    } catch (Exception e) {","type":"insert","newNumber":72},{"content":"+\t\t// intentionally empty","type":"insert","newNumber":73},{"content":"+\t\tLog.printStackTrace (e);","type":"insert","newNumber":74},{"content":"+\t    }","type":"insert","newNumber":75},{"content":"+\t}","type":"insert","newNumber":76},{"content":"+\treturn results;","type":"insert","newNumber":77},{"content":"+    }","type":"insert","newNumber":78},{"content":"+","type":"insert","newNumber":79},{"content":"+    public static Optional<List<WFSCapabilitiesBase>> getMultipleGetCapabilities (String url, WFSVersion version) {","type":"insert","newNumber":80},{"content":"+\tList<Optional<WFSCapabilitiesBase>> allNonThrowing = getAllNonThrowing (","type":"insert","newNumber":81},{"content":"+\t\t() -> requestGetCapabilities (url, version, RequestMethod.GET),","type":"insert","newNumber":82},{"content":"+\t\t() -> requestGetCapabilities (url, version, RequestMethod.POST)","type":"insert","newNumber":83},{"content":"+\t);","type":"insert","newNumber":84},{"content":"+\tList<WFSCapabilitiesBase> nonEmptyCaps = allNonThrowing.stream ().filter (Optional::isPresent).map (","type":"insert","newNumber":85},{"content":"+\t\tOptional::get).toList ();","type":"insert","newNumber":86},{"content":"+","type":"insert","newNumber":87},{"content":"+\tif (!allNonThrowing.isEmpty ()) {","type":"insert","newNumber":88},{"content":"+\t    return Optional.of (nonEmptyCaps);","type":"insert","newNumber":89},{"content":"+\t}","type":"insert","newNumber":90},{"content":"+","type":"insert","newNumber":91},{"content":"+\treturn Optional.empty ();","type":"insert","newNumber":92},{"content":"+    }","type":"insert","newNumber":93},{"content":"+","type":"insert","newNumber":94},{"content":"+    public static Optional<WFSCapabilitiesBase> requestGetCapabilities (String url, WFSVersion version) {","type":"insert","newNumber":95},{"content":"+\t// get first successful attempt","type":"insert","newNumber":96},{"content":"+\tOptional<WFSCapabilitiesBase> firstNonThrow = getFirstNonThrowing (","type":"insert","newNumber":97},{"content":"+\t\t() -> requestGetCapabilities (url, version, RequestMethod.GET),","type":"insert","newNumber":98},{"content":"+\t\t() -> requestGetCapabilities (url, version, RequestMethod.POST)","type":"insert","newNumber":99},{"content":"+\t);","type":"insert","newNumber":100},{"content":"+\tif (firstNonThrow != null && firstNonThrow.isPresent ()) {","type":"insert","newNumber":101},{"content":"+\t    // want to return a non-null value if there is something inside the Optional<T>","type":"insert","newNumber":102},{"content":"+\t    return firstNonThrow;","type":"insert","newNumber":103},{"content":"+\t}","type":"insert","newNumber":104},{"content":"+","type":"insert","newNumber":105},{"content":"+\treturn Optional.empty ();","type":"insert","newNumber":106},{"content":"+    }","type":"insert","newNumber":107},{"content":"+","type":"insert","newNumber":108},{"content":"+    public static Optional<WFSCapabilitiesBase> requestGetCapabilities (String url, WFSVersion version,","type":"insert","newNumber":109},{"content":"+\t\t\t\t\t\t\t\t\tRequestMethod method)","type":"insert","newNumber":110},{"content":"+    throws JAXBException, IOException {","type":"insert","newNumber":111},{"content":"+","type":"insert","newNumber":112},{"content":"+\tswitch (method) {","type":"insert","newNumber":113},{"content":"+\t    case GET -> {","type":"insert","newNumber":114},{"content":"+\t\tWFSRequest capRequest = GetCapabilitiesRequest.build (url, version);","type":"insert","newNumber":115},{"content":"+\t\tWFSResponse<WFSCapabilitiesBase> response = WFS.getCapabilities (capRequest);","type":"insert","newNumber":116},{"content":"+\t\tif (response != null && !response.isException ()) {","type":"insert","newNumber":117},{"content":"+\t\t    return Optional.of (response.getResults ().get (0));","type":"insert","newNumber":118},{"content":"+\t\t}","type":"insert","newNumber":119},{"content":"+\t    }","type":"insert","newNumber":120},{"content":"+\t    case POST -> {","type":"insert","newNumber":121},{"content":"+\t\tGetCapabilitiesBuilder capsBuilder = new GetCapabilitiesBuilder (version);","type":"insert","newNumber":122},{"content":"+\t\tWFSRequest req = capsBuilder.build ();","type":"insert","newNumber":123},{"content":"+\t\treq.setUrl (url);","type":"insert","newNumber":124},{"content":"+\t\tWFSResponse<WFSCapabilitiesBase> response = WFS.getCapabilities (req);","type":"insert","newNumber":125},{"content":"+\t\tif (response != null && !response.isException ()) {","type":"insert","newNumber":126},{"content":"+\t\t    return Optional.of (response.getResults ().get (0));","type":"insert","newNumber":127},{"content":"+\t\t}","type":"insert","newNumber":128},{"content":"+\t    }","type":"insert","newNumber":129},{"content":"+\t}","type":"insert","newNumber":130},{"content":"+","type":"insert","newNumber":131},{"content":"+\treturn Optional.empty ();","type":"insert","newNumber":132},{"content":"+    }","type":"insert","newNumber":133},{"content":"+","type":"insert","newNumber":134},{"content":" }","type":"context","oldNumber":2,"newNumber":135}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,2 +1,135 @@"}],"deletedLines":1,"addedLines":134,"isGitDiff":true,"checksumBefore":"add1f4311a0","checksumAfter":"e3f3cbfe40b","mode":"100644","oldName":"src/bios/plugin/web/wfs/compatibility/GetCapabilitiesStrategy.java","language":"java","newName":"src/bios/plugin/web/wfs/compatibility/GetCapabilitiesStrategy.java","isCombined":false},{"blocks":[{"lines":[{"content":" package bios.plugin.web.wfs.compatibility;","type":"context","oldNumber":1,"newNumber":1},{"content":" ","type":"context","oldNumber":2,"newNumber":2},{"content":"+import bios.plugin.web.wfs.WFSCapabilitiesBase;","type":"insert","newNumber":3},{"content":" import bios.plugin.web.wfs.WFSVersion;","type":"context","oldNumber":3,"newNumber":4},{"content":" ","type":"context","oldNumber":4,"newNumber":5},{"content":"+import java.util.List;","type":"insert","newNumber":6},{"content":"+","type":"insert","newNumber":7},{"content":" public class VersionNegotiator {","type":"context","oldNumber":5,"newNumber":8},{"content":"     public VersionNegotiator (String url) {","type":"context","oldNumber":6,"newNumber":9},{"content":" ","type":"context","oldNumber":7,"newNumber":10}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,7 +1,10 @@"},{"lines":[{"content":"     public VersionNegotiator (String url, WFSVersion preference) {","type":"context","oldNumber":10,"newNumber":13},{"content":" ","type":"context","oldNumber":11,"newNumber":14},{"content":"     }","type":"context","oldNumber":12,"newNumber":15},{"content":"+","type":"insert","newNumber":16},{"content":"+    /**","type":"insert","newNumber":17},{"content":"+     * Choose a GetCapabilities instance from a list that has the preferred version, or the first one if","type":"insert","newNumber":18},{"content":"+     * no such exists.","type":"insert","newNumber":19},{"content":"+     */","type":"insert","newNumber":20},{"content":"+    public static WFSCapabilitiesBase choose (List<WFSCapabilitiesBase> caps, WFSVersion preference) {","type":"insert","newNumber":21},{"content":"+        if (caps == null || caps.isEmpty ()) {","type":"insert","newNumber":22},{"content":"+            return null;","type":"insert","newNumber":23},{"content":"+        }","type":"insert","newNumber":24},{"content":"+        for (WFSCapabilitiesBase cap: caps) {","type":"insert","newNumber":25},{"content":"+            if (cap.getVersion () == preference) {","type":"insert","newNumber":26},{"content":"+                return cap;","type":"insert","newNumber":27},{"content":"+            }","type":"insert","newNumber":28},{"content":"+        }","type":"insert","newNumber":29},{"content":"+        return caps.get (0);","type":"insert","newNumber":30},{"content":"+    }","type":"insert","newNumber":31},{"content":" }","type":"context","oldNumber":13,"newNumber":32}],"oldStartLine":10,"oldStartLine2":null,"newStartLine":13,"header":"@@ -10,4 +13,20 @@ public class VersionNegotiator {"}],"deletedLines":0,"addedLines":19,"isGitDiff":true,"checksumBefore":"d8191223899","checksumAfter":"c10ab99f7cd","mode":"100644","oldName":"src/bios/plugin/web/wfs/compatibility/VersionNegotiator.java","language":"java","newName":"src/bios/plugin/web/wfs/compatibility/VersionNegotiator.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.endpoints;public interface HasEndpointMap {","type":"delete","oldNumber":1},{"content":"+package bios.plugin.web.wfs.endpoints;","type":"insert","newNumber":1},{"content":"+","type":"insert","newNumber":2},{"content":"+import bios.plugin.web.wfs.WFSOperationType;","type":"insert","newNumber":3},{"content":"+","type":"insert","newNumber":4},{"content":"+import java.util.Map;","type":"insert","newNumber":5},{"content":"+","type":"insert","newNumber":6},{"content":"+public interface HasEndpointMap {","type":"insert","newNumber":7},{"content":"+    Map<WFSOperationType, WFSEndpoint> getEndpointMap ();","type":"insert","newNumber":8},{"content":"+","type":"insert","newNumber":9},{"content":" }","type":"context","oldNumber":2,"newNumber":10}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,2 +1,10 @@"}],"deletedLines":1,"addedLines":9,"isGitDiff":true,"checksumBefore":"e319bcf3703","checksumAfter":"26b06d64ad8","mode":"100644","oldName":"src/bios/plugin/web/wfs/endpoints/HasEndpointMap.java","language":"java","newName":"src/bios/plugin/web/wfs/endpoints/HasEndpointMap.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.endpoints;public class OperationRouter {","type":"delete","oldNumber":1},{"content":"+package bios.plugin.web.wfs.endpoints;","type":"insert","newNumber":1},{"content":"+","type":"insert","newNumber":2},{"content":"+import bios.plugin.web.wfs.WFSOperationType;","type":"insert","newNumber":3},{"content":"+import java.util.function.BiFunction;","type":"insert","newNumber":4},{"content":"+","type":"insert","newNumber":5},{"content":"+public class OperationRouter implements BiFunction<WFSOperationType, HasEndpointMap[], WFSEndpoint> {","type":"insert","newNumber":6},{"content":"+    @Override","type":"insert","newNumber":7},{"content":"+    public WFSEndpoint apply (WFSOperationType operationType, HasEndpointMap... hasEndpointMap) {","type":"insert","newNumber":8},{"content":"+\tfor (var endpointMapHolder : hasEndpointMap) {","type":"insert","newNumber":9},{"content":"+\t    var endpointMap = endpointMapHolder.getEndpointMap ();","type":"insert","newNumber":10},{"content":"+\t    if (endpointMap.containsKey (operationType)){","type":"insert","newNumber":11},{"content":"+\t\treturn endpointMap.get (operationType);","type":"insert","newNumber":12},{"content":"+\t    }","type":"insert","newNumber":13},{"content":"+\t}","type":"insert","newNumber":14},{"content":"+\treturn null;","type":"insert","newNumber":15},{"content":"+    }","type":"insert","newNumber":16},{"content":" }","type":"context","oldNumber":2,"newNumber":17}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,2 +1,17 @@"}],"deletedLines":1,"addedLines":16,"isGitDiff":true,"checksumBefore":"20811b69048","checksumAfter":"cee3f4f8765","mode":"100644","oldName":"src/bios/plugin/web/wfs/endpoints/OperationRouter.java","language":"java","newName":"src/bios/plugin/web/wfs/endpoints/OperationRouter.java","isCombined":false},{"blocks":[{"lines":[{"content":" package bios.plugin.web.wfs.endpoints;","type":"context","oldNumber":1,"newNumber":1},{"content":" ","type":"context","oldNumber":2,"newNumber":2},{"content":"+import bios.jcommon.Log;","type":"insert","newNumber":3},{"content":" import bios.jcommon.SProperties;","type":"context","oldNumber":3,"newNumber":4},{"content":"+import bios.jcommon.helpers.CollectionHelper;","type":"insert","newNumber":5},{"content":" import bios.plugin.web.wfs.RequestMethod;","type":"context","oldNumber":4,"newNumber":6},{"content":" import bios.plugin.web.wfs.WFSOperationType;","type":"context","oldNumber":5,"newNumber":7},{"content":" ","type":"context","oldNumber":6,"newNumber":8},{"content":"+import java.net.MalformedURLException;","type":"insert","newNumber":9},{"content":" import java.net.URL;","type":"context","oldNumber":7,"newNumber":10},{"content":"+import java.util.ArrayList;","type":"insert","newNumber":11},{"content":" import java.util.List;","type":"context","oldNumber":8,"newNumber":12},{"content":"+import java.util.Map;","type":"insert","newNumber":13},{"content":" ","type":"context","oldNumber":9,"newNumber":14},{"content":"-public class WFSConfigEndpoint extends WFSEndpoint {","type":"delete","oldNumber":10},{"content":"-    private static String urlKey = \"\"","type":"delete","oldNumber":11},{"content":"-    public WFSConfigEndpoint (URL baseUrl, RequestMethod method, WFSOperationType operationType) {","type":"delete","oldNumber":12},{"content":"-\tsuper (baseUrl, method, operationType);","type":"delete","oldNumber":13},{"content":"+// TODO: this entire class","type":"insert","newNumber":15},{"content":"+// Build collection of endpoints from config file","type":"insert","newNumber":16},{"content":"+public class WFSConfigEndpoints implements HasEndpointMap {","type":"insert","newNumber":17},{"content":"+    private Map<WFSOperationType, WFSEndpoint> endpointMap = Map.of ();","type":"insert","newNumber":18},{"content":"+    public WFSConfigEndpoints () {","type":"insert","newNumber":19},{"content":"     }","type":"context","oldNumber":14,"newNumber":20},{"content":" ","type":"context","oldNumber":15,"newNumber":21},{"content":"-    public static WFSConfigEndpoint fromProps (SProperties props) {","type":"delete","oldNumber":16},{"content":"+    public WFSConfigEndpoints (Map<WFSOperationType, WFSEndpoint> endpointMap) {","type":"insert","newNumber":22},{"content":"+\tthis.endpointMap = endpointMap;","type":"insert","newNumber":23},{"content":"+    }","type":"insert","newNumber":24},{"content":"+","type":"insert","newNumber":25},{"content":"+    // TODO: probably one should only be able to create this from props","type":"insert","newNumber":26},{"content":"+    public static WFSConfigEndpoints fromProps (SProperties props) {","type":"insert","newNumber":27},{"content":" \tList<String> endpoints = props.getPropertyList (\"endpoints\", null, \",\");","type":"context","oldNumber":17,"newNumber":28},{"content":"+\tif (!CollectionHelper.isNullOrEmpty (endpoints)) {","type":"insert","newNumber":29},{"content":"+","type":"insert","newNumber":30},{"content":"+\t    int numEndpoints = endpoints.size () / 3;","type":"insert","newNumber":31},{"content":"+\t    List<WFSEndpoint> endpointList = new ArrayList<> ();","type":"insert","newNumber":32},{"content":"+\t    for (int i = 0; i < numEndpoints; i++) {","type":"insert","newNumber":33},{"content":"+\t\tendpointList.add (parseEndpointFromPropList (endpoints.get (3 * i), endpoints.get (3 * i + 1),","type":"insert","newNumber":34},{"content":"+\t\t\t\t\t\t\t     endpoints.get (3 * i) + 2));","type":"insert","newNumber":35},{"content":"+\t    }","type":"insert","newNumber":36},{"content":"+\t    WFSConfigEndpoints configEndpoints = new WFSConfigEndpoints ();","type":"insert","newNumber":37},{"content":"+","type":"insert","newNumber":38},{"content":"+\t}","type":"insert","newNumber":39},{"content":"+\treturn new WFSConfigEndpoints ();","type":"insert","newNumber":40},{"content":"+    }","type":"insert","newNumber":41},{"content":"+","type":"insert","newNumber":42},{"content":"+    private static WFSEndpoint parseEndpointFromPropList (String... fieldValues) {","type":"insert","newNumber":43},{"content":"+\ttry {","type":"insert","newNumber":44},{"content":"+\t    // this is fragile code","type":"insert","newNumber":45},{"content":"+\t    URL u = new URL (fieldValues[0]);","type":"insert","newNumber":46},{"content":"+\t    String methodString = fieldValues[1].toUpperCase ();","type":"insert","newNumber":47},{"content":"+\t    RequestMethod method = RequestMethod.valueOf (methodString);","type":"insert","newNumber":48},{"content":"+\t    String operation = fieldValues[2];","type":"insert","newNumber":49},{"content":"+\t    WFSOperationType operationType = WFSOperationType.valueOf (operation);","type":"insert","newNumber":50},{"content":"+\t    return new WFSEndpoint (u, method, operationType);","type":"insert","newNumber":51},{"content":"+\t} catch (MalformedURLException ex) {","type":"insert","newNumber":52},{"content":"+\t    Log.print (\"Can't parse endpoint from Config file:\");","type":"insert","newNumber":53},{"content":"+\t    Log.printStackTrace (ex);","type":"insert","newNumber":54},{"content":"+\t}","type":"insert","newNumber":55},{"content":" \treturn null;","type":"context","oldNumber":18,"newNumber":56},{"content":"     }","type":"context","oldNumber":19,"newNumber":57},{"content":"+","type":"insert","newNumber":58},{"content":"+    @Override","type":"insert","newNumber":59},{"content":"+    public Map<WFSOperationType, WFSEndpoint> getEndpointMap () {","type":"insert","newNumber":60},{"content":"+\treturn endpointMap;","type":"insert","newNumber":61},{"content":"+    }","type":"insert","newNumber":62},{"content":"+","type":"insert","newNumber":63},{"content":"+    public boolean isEmpty () {","type":"insert","newNumber":64},{"content":"+\treturn endpointMap.isEmpty ();","type":"insert","newNumber":65},{"content":"+    }","type":"insert","newNumber":66},{"content":"+","type":"insert","newNumber":67},{"content":" }","type":"context","oldNumber":20,"newNumber":68}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,20 +1,68 @@"}],"deletedLines":5,"addedLines":53,"isGitDiff":true,"checksumBefore":"08fb505c81f","checksumAfter":"afeeee7cfbd","mode":"100644","oldName":"src/bios/plugin/web/wfs/endpoints/WFSConfigEndpoints.java","language":"java","newName":"src/bios/plugin/web/wfs/endpoints/WFSConfigEndpoints.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.endpoints;public class WFSDefaultEndpoints {","type":"delete","oldNumber":1},{"content":"+package bios.plugin.web.wfs.endpoints;","type":"insert","newNumber":1},{"content":"+","type":"insert","newNumber":2},{"content":"+import bios.plugin.web.wfs.RequestMethod;","type":"insert","newNumber":3},{"content":"+import bios.plugin.web.wfs.WFSOperationType;","type":"insert","newNumber":4},{"content":"+","type":"insert","newNumber":5},{"content":"+import java.util.Collection;","type":"insert","newNumber":6},{"content":"+import java.util.LinkedHashMap;","type":"insert","newNumber":7},{"content":"+import java.util.Map;","type":"insert","newNumber":8},{"content":"+","type":"insert","newNumber":9},{"content":"+public class WFSDefaultEndpoints implements HasEndpointMap {","type":"insert","newNumber":10},{"content":"+    private static final RequestMethod defaultPreferredMethod = RequestMethod.GET;","type":"insert","newNumber":11},{"content":"+    private final Map<WFSOperationType, WFSEndpoint> endpointMap;","type":"insert","newNumber":12},{"content":"+","type":"insert","newNumber":13},{"content":"+    public WFSDefaultEndpoints (Collection<WFSEndpoint> endpoints) {","type":"insert","newNumber":14},{"content":"+\tendpointMap = buildEndpointMap (endpoints, defaultPreferredMethod);","type":"insert","newNumber":15},{"content":"+    }","type":"insert","newNumber":16},{"content":"+","type":"insert","newNumber":17},{"content":"+    public WFSDefaultEndpoints (Collection<WFSEndpoint> endpoints, RequestMethod preferredMethod) {","type":"insert","newNumber":18},{"content":"+\tendpointMap = buildEndpointMap (endpoints, preferredMethod);","type":"insert","newNumber":19},{"content":"+    }","type":"insert","newNumber":20},{"content":"+","type":"insert","newNumber":21},{"content":"+    private Map<WFSOperationType, WFSEndpoint> buildEndpointMap (Collection<WFSEndpoint> endpoints,","type":"insert","newNumber":22},{"content":"+\t\t\t\t\t\t\t\t RequestMethod preferredMethod) {","type":"insert","newNumber":23},{"content":"+\tMap<WFSOperationType, WFSEndpoint> endpointMap = new LinkedHashMap<> ();","type":"insert","newNumber":24},{"content":"+\tfor (WFSEndpoint endpoint : endpoints) {","type":"insert","newNumber":25},{"content":"+\t    WFSOperationType opType = endpoint.getOperationType ();","type":"insert","newNumber":26},{"content":"+\t    // prefer preferred method, or fall back if the endpoint doesn't have the preferred method","type":"insert","newNumber":27},{"content":"+\t    if (endpoint.getMethod () == preferredMethod || !endpointMap.containsKey (opType)) {","type":"insert","newNumber":28},{"content":"+\t\tendpointMap.put (opType, endpoint);","type":"insert","newNumber":29},{"content":"+\t    }","type":"insert","newNumber":30},{"content":"+\t}","type":"insert","newNumber":31},{"content":"+\treturn endpointMap;","type":"insert","newNumber":32},{"content":"+    }","type":"insert","newNumber":33},{"content":"+","type":"insert","newNumber":34},{"content":"+    @Override","type":"insert","newNumber":35},{"content":"+    public Map<WFSOperationType, WFSEndpoint> getEndpointMap () {","type":"insert","newNumber":36},{"content":"+\treturn endpointMap;","type":"insert","newNumber":37},{"content":"+    }","type":"insert","newNumber":38},{"content":" }","type":"context","oldNumber":2,"newNumber":39}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,2 +1,39 @@"}],"deletedLines":1,"addedLines":38,"isGitDiff":true,"checksumBefore":"b0a19c78298","checksumAfter":"78445d6e417","mode":"100644","oldName":"src/bios/plugin/web/wfs/endpoints/WFSDefaultEndpoints.java","language":"java","newName":"src/bios/plugin/web/wfs/endpoints/WFSDefaultEndpoints.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.endpoints;public class WFSEndpoint {","type":"delete","oldNumber":1},{"content":"+package bios.plugin.web.wfs.endpoints;","type":"insert","newNumber":1},{"content":"+","type":"insert","newNumber":2},{"content":"+import bios.jcommon.Log;","type":"insert","newNumber":3},{"content":"+import bios.plugin.web.wfs.RequestMethod;","type":"insert","newNumber":4},{"content":"+import bios.plugin.web.wfs.WFSOperationType;","type":"insert","newNumber":5},{"content":"+import bios.plugin.web.wfs.operations.WFSOperation;","type":"insert","newNumber":6},{"content":"+","type":"insert","newNumber":7},{"content":"+import java.net.MalformedURLException;","type":"insert","newNumber":8},{"content":"+import java.net.URL;","type":"insert","newNumber":9},{"content":"+import java.util.ArrayList;","type":"insert","newNumber":10},{"content":"+import java.util.List;","type":"insert","newNumber":11},{"content":"+import java.util.Map;","type":"insert","newNumber":12},{"content":"+","type":"insert","newNumber":13},{"content":"+/**","type":"insert","newNumber":14},{"content":"+ * Represents an endpoint to a supported wfs operation.","type":"insert","newNumber":15},{"content":"+ */","type":"insert","newNumber":16},{"content":"+public class WFSEndpoint {","type":"insert","newNumber":17},{"content":"+    private final URL baseUrl;","type":"insert","newNumber":18},{"content":"+    private final RequestMethod method;","type":"insert","newNumber":19},{"content":"+    private final WFSOperationType operationType;","type":"insert","newNumber":20},{"content":"+","type":"insert","newNumber":21},{"content":"+    public WFSEndpoint (URL baseUrl, RequestMethod method, WFSOperationType operationType) {","type":"insert","newNumber":22},{"content":"+\tthis.baseUrl = baseUrl;","type":"insert","newNumber":23},{"content":"+\tthis.method = method;","type":"insert","newNumber":24},{"content":"+\tthis.operationType = operationType;","type":"insert","newNumber":25},{"content":"+    }","type":"insert","newNumber":26},{"content":"+","type":"insert","newNumber":27},{"content":"+    public static List<WFSEndpoint> fromOperation (WFSOperation wfsOperation) {","type":"insert","newNumber":28},{"content":"+\tList<WFSEndpoint> endpoints = new ArrayList<> ();","type":"insert","newNumber":29},{"content":"+\tWFSOperationType opType = WFSOperationType.find (wfsOperation.getName ());","type":"insert","newNumber":30},{"content":"+\tif (opType != null) {","type":"insert","newNumber":31},{"content":"+\t    for (Map.Entry<RequestMethod, String> methodToUrl : wfsOperation.getRequestMethodToURL ().entrySet ()) {","type":"insert","newNumber":32},{"content":"+\t\ttry {","type":"insert","newNumber":33},{"content":"+\t\t    URL url = new URL (methodToUrl.getValue ());","type":"insert","newNumber":34},{"content":"+\t\t    endpoints.add (new WFSEndpoint (url, methodToUrl.getKey (), opType));","type":"insert","newNumber":35},{"content":"+\t\t} catch (MalformedURLException e) {","type":"insert","newNumber":36},{"content":"+\t\t    Log.print (\"Parsing wfs operation with malformed url, skipping.\");","type":"insert","newNumber":37},{"content":"+\t\t}","type":"insert","newNumber":38},{"content":"+\t    }","type":"insert","newNumber":39},{"content":"+\t}","type":"insert","newNumber":40},{"content":"+\treturn endpoints;","type":"insert","newNumber":41},{"content":"+    }","type":"insert","newNumber":42},{"content":"+","type":"insert","newNumber":43},{"content":"+    public URL getBaseUrl () {","type":"insert","newNumber":44},{"content":"+\treturn baseUrl;","type":"insert","newNumber":45},{"content":"+    }","type":"insert","newNumber":46},{"content":"+","type":"insert","newNumber":47},{"content":"+    public RequestMethod getMethod () {","type":"insert","newNumber":48},{"content":"+\treturn method;","type":"insert","newNumber":49},{"content":"+    }","type":"insert","newNumber":50},{"content":"+","type":"insert","newNumber":51},{"content":"+    public WFSOperationType getOperationType () {","type":"insert","newNumber":52},{"content":"+\treturn operationType;","type":"insert","newNumber":53},{"content":"+    }","type":"insert","newNumber":54},{"content":" }","type":"context","oldNumber":2,"newNumber":55}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,2 +1,55 @@"}],"deletedLines":1,"addedLines":54,"isGitDiff":true,"checksumBefore":"ae1b86b9bbf","checksumAfter":"e62a813116c","mode":"100644","oldName":"src/bios/plugin/web/wfs/endpoints/WFSEndpoint.java","language":"java","newName":"src/bios/plugin/web/wfs/endpoints/WFSEndpoint.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.endpoints;public class WFSEndpointHelper {","type":"delete","oldNumber":1},{"content":"+package bios.plugin.web.wfs.endpoints;","type":"insert","newNumber":1},{"content":"+","type":"insert","newNumber":2},{"content":"+import bios.plugin.web.wfs.WFSCapabilitiesBase;","type":"insert","newNumber":3},{"content":"+","type":"insert","newNumber":4},{"content":"+import java.util.List;","type":"insert","newNumber":5},{"content":"+","type":"insert","newNumber":6},{"content":"+public class WFSEndpointHelper {","type":"insert","newNumber":7},{"content":"+    public static List<WFSEndpoint> fromCapabilities (WFSCapabilitiesBase wfsCapabilitiesBase) {","type":"insert","newNumber":8},{"content":"+","type":"insert","newNumber":9},{"content":"+\treturn wfsCapabilitiesBase.getOperationsMetadata ()","type":"insert","newNumber":10},{"content":"+\t\t.map (wfsOperationsMetadata -> wfsOperationsMetadata.getOperations ()","type":"insert","newNumber":11},{"content":"+\t\t\t.stream ()","type":"insert","newNumber":12},{"content":"+\t\t\t.map (WFSEndpoint::fromOperation).flatMap (List::stream).toList ()).orElse (null);","type":"insert","newNumber":13},{"content":"+    }","type":"insert","newNumber":14},{"content":" }","type":"context","oldNumber":2,"newNumber":15}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,2 +1,15 @@"}],"deletedLines":1,"addedLines":14,"isGitDiff":true,"checksumBefore":"06279dd0f47","checksumAfter":"b08ab70d85b","mode":"100644","oldName":"src/bios/plugin/web/wfs/endpoints/WFSEndpointHelper.java","language":"java","newName":"src/bios/plugin/web/wfs/endpoints/WFSEndpointHelper.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.endpoints;public class WFSEndpointMap {","type":"delete","oldNumber":1},{"content":"+package bios.plugin.web.wfs.endpoints;","type":"insert","newNumber":1},{"content":"+","type":"insert","newNumber":2},{"content":"+import bios.plugin.web.wfs.WFSOperationType;","type":"insert","newNumber":3},{"content":"+","type":"insert","newNumber":4},{"content":"+import java.util.Collections;","type":"insert","newNumber":5},{"content":"+import java.util.LinkedHashMap;","type":"insert","newNumber":6},{"content":"+import java.util.Map;","type":"insert","newNumber":7},{"content":"+","type":"insert","newNumber":8},{"content":"+public class WFSEndpointMap implements HasEndpointMap {","type":"insert","newNumber":9},{"content":"+    private final Map<WFSOperationType, WFSEndpoint> operationMap;","type":"insert","newNumber":10},{"content":"+","type":"insert","newNumber":11},{"content":"+    public WFSEndpointMap (Map<WFSOperationType, WFSEndpoint> operationMap) {","type":"insert","newNumber":12},{"content":"+\tthis.operationMap = operationMap;","type":"insert","newNumber":13},{"content":"+    }","type":"insert","newNumber":14},{"content":"+","type":"insert","newNumber":15},{"content":"+    public static WFSEndpointMap withFallback (HasEndpointMap primary, HasEndpointMap secondary) {","type":"insert","newNumber":16},{"content":"+\tMap<WFSOperationType, WFSEndpoint> opMap = new LinkedHashMap<> ();","type":"insert","newNumber":17},{"content":"+\topMap.putAll (secondary.getEndpointMap ());","type":"insert","newNumber":18},{"content":"+\topMap.putAll (primary.getEndpointMap ());","type":"insert","newNumber":19},{"content":"+\treturn new WFSEndpointMap (opMap);","type":"insert","newNumber":20},{"content":"+    }","type":"insert","newNumber":21},{"content":"+    @Override","type":"insert","newNumber":22},{"content":"+    public Map<WFSOperationType, WFSEndpoint> getEndpointMap () {","type":"insert","newNumber":23},{"content":"+\treturn Collections.unmodifiableMap (operationMap);","type":"insert","newNumber":24},{"content":"+    }","type":"insert","newNumber":25},{"content":" }","type":"context","oldNumber":2,"newNumber":26}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,2 +1,26 @@"}],"deletedLines":1,"addedLines":25,"isGitDiff":true,"checksumBefore":"6405ee2f5a5","checksumAfter":"24e033eb6d8","mode":"100644","oldName":"src/bios/plugin/web/wfs/endpoints/WFSEndpointMap.java","language":"java","newName":"src/bios/plugin/web/wfs/endpoints/WFSEndpointMap.java","isCombined":false},{"blocks":[{"lines":[{"content":"     }","type":"context","oldNumber":15,"newNumber":15},{"content":"     @Override","type":"context","oldNumber":16,"newNumber":16},{"content":"     public QName getName () {","type":"context","oldNumber":17,"newNumber":17},{"content":"+\t// TODO: figure out why some WFSes don't set a name (name is null)","type":"insert","newNumber":18},{"content":" \treturn ftt.getName ();","type":"context","oldNumber":18,"newNumber":19},{"content":"     }","type":"context","oldNumber":19,"newNumber":20},{"content":" ","type":"context","oldNumber":20,"newNumber":21}],"oldStartLine":15,"oldStartLine2":null,"newStartLine":15,"header":"@@ -15,6 +15,7 @@ public class WFSFeatureType2 extends WFSFeatureType {"}],"deletedLines":0,"addedLines":1,"isGitDiff":true,"checksumBefore":"7c8c559a665","checksumAfter":"ac945da9d73","mode":"100644","oldName":"src/bios/plugin/web/wfs/features/WFSFeatureType2.java","language":"java","newName":"src/bios/plugin/web/wfs/features/WFSFeatureType2.java","isCombined":false},{"blocks":[{"lines":[{"content":"     }","type":"context","oldNumber":13,"newNumber":13},{"content":" ","type":"context","oldNumber":14,"newNumber":14},{"content":"     public List<String> getOperations () {","type":"context","oldNumber":15,"newNumber":15},{"content":"-\tthrow new UnsupportedOperationException (\"\");","type":"delete","oldNumber":16},{"content":"+\tthrow new UnsupportedOperationException (\"No operations list present in wfs 2\");","type":"insert","newNumber":16},{"content":"     }","type":"context","oldNumber":17,"newNumber":17},{"content":" ","type":"context","oldNumber":18,"newNumber":18},{"content":"     public abstract List<WFSFeatureType> getFeatureTypes ();","type":"context","oldNumber":19,"newNumber":19}],"oldStartLine":13,"oldStartLine2":null,"newStartLine":13,"header":"@@ -13,7 +13,7 @@ public abstract class WFSFeatureTypeList {"}],"deletedLines":1,"addedLines":1,"isGitDiff":true,"checksumBefore":"903c88a5c6c","checksumAfter":"7b3f60d2e84","mode":"100644","oldName":"src/bios/plugin/web/wfs/features/WFSFeatureTypeList.java","language":"java","newName":"src/bios/plugin/web/wfs/features/WFSFeatureTypeList.java","isCombined":false},{"blocks":[{"lines":[{"content":" package bios.plugin.web.wfs.features;","type":"context","oldNumber":1,"newNumber":1},{"content":" ","type":"context","oldNumber":2,"newNumber":2},{"content":" import net.opengis.wfs.v_1_1_0.FeatureTypeListType;","type":"context","oldNumber":3,"newNumber":3},{"content":"+import net.opengis.wfs.v_1_1_0.OperationType;","type":"insert","newNumber":4},{"content":" ","type":"context","oldNumber":4,"newNumber":5},{"content":" import java.util.List;","type":"context","oldNumber":5,"newNumber":6},{"content":" ","type":"context","oldNumber":6,"newNumber":7}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,6 +1,7 @@"},{"lines":[{"content":"     public List<WFSFeatureType> getFeatureTypes () {","type":"context","oldNumber":15,"newNumber":16},{"content":" \treturn featureTypeListType.getFeatureType ().stream().map (WFSFeatureType::wrap).toList ();","type":"context","oldNumber":16,"newNumber":17},{"content":"     }","type":"context","oldNumber":17,"newNumber":18},{"content":"+","type":"insert","newNumber":19},{"content":"+    @Override","type":"insert","newNumber":20},{"content":"+    public List<String> getOperations () {","type":"insert","newNumber":21},{"content":"+\treturn featureTypeListType.getOperations ().getOperation ().stream ().map (OperationType::value).toList ();","type":"insert","newNumber":22},{"content":"+    }","type":"insert","newNumber":23},{"content":"+","type":"insert","newNumber":24},{"content":" }","type":"context","oldNumber":18,"newNumber":25}],"oldStartLine":15,"oldStartLine2":null,"newStartLine":16,"header":"@@ -15,4 +16,10 @@ public class WFSFeatureTypeList110 extends WFSFeatureTypeList {"}],"deletedLines":0,"addedLines":7,"isGitDiff":true,"checksumBefore":"fa7fc7a2459","checksumAfter":"0d610efe377","mode":"100644","oldName":"src/bios/plugin/web/wfs/features/WFSFeatureTypeList110.java","language":"java","newName":"src/bios/plugin/web/wfs/features/WFSFeatureTypeList110.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.getrequests;public class GetCapabilitiesRequest {","type":"delete","oldNumber":1},{"content":"+package bios.plugin.web.wfs.getrequests;","type":"insert","newNumber":1},{"content":"+","type":"insert","newNumber":2},{"content":"+import bios.jcommon.Log;","type":"insert","newNumber":3},{"content":"+import bios.plugin.web.wfs.WFSVersion;","type":"insert","newNumber":4},{"content":"+import bios.plugin.web.wfs.requests.GetCapabilities110;","type":"insert","newNumber":5},{"content":"+import bios.plugin.web.wfs.requests.GetCapabilities2;","type":"insert","newNumber":6},{"content":"+import bios.plugin.web.wfs.requests.WFSRequest;","type":"insert","newNumber":7},{"content":"+","type":"insert","newNumber":8},{"content":"+// TODO: this class is a bit of a band-aid. It should disappear.","type":"insert","newNumber":9},{"content":"+public class GetCapabilitiesRequest {","type":"insert","newNumber":10},{"content":"+    public static String buildUrl (String baseUrl, WFSVersion version) {","type":"insert","newNumber":11},{"content":"+\tGetRequestBuilder builder = new GetRequestBuilder ();","type":"insert","newNumber":12},{"content":"+\tbuilder.setVersion (version);","type":"insert","newNumber":13},{"content":"+\tbuilder.setParameter (\"request\", \"GetCapabilities\");","type":"insert","newNumber":14},{"content":"+\tString finalUrl = baseUrl;","type":"insert","newNumber":15},{"content":"+\tif (baseUrl.indexOf ('?') == -1) {","type":"insert","newNumber":16},{"content":"+\t    finalUrl += \"?\";","type":"insert","newNumber":17},{"content":"+\t}","type":"insert","newNumber":18},{"content":"+","type":"insert","newNumber":19},{"content":"+\tString params = builder.buildParameters ();","type":"insert","newNumber":20},{"content":"+\tLog.print (\"Got params: \" + params);","type":"insert","newNumber":21},{"content":"+\treturn finalUrl + params;","type":"insert","newNumber":22},{"content":"+    }","type":"insert","newNumber":23},{"content":"+","type":"insert","newNumber":24},{"content":"+    public static WFSRequest build (String baseUrl, WFSVersion version) {","type":"insert","newNumber":25},{"content":"+\tString url = buildUrl (baseUrl, version);","type":"insert","newNumber":26},{"content":"+\tWFSRequest req = switch (version) {","type":"insert","newNumber":27},{"content":"+\t    case v2 -> new GetCapabilities2 (null);","type":"insert","newNumber":28},{"content":"+\t    case v110 -> new GetCapabilities110 (null);","type":"insert","newNumber":29},{"content":"+\t};","type":"insert","newNumber":30},{"content":"+\treq.setUrl (url);","type":"insert","newNumber":31},{"content":"+\treturn req;","type":"insert","newNumber":32},{"content":"+    }","type":"insert","newNumber":33},{"content":" }","type":"context","oldNumber":2,"newNumber":34}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,2 +1,34 @@"}],"deletedLines":1,"addedLines":33,"isGitDiff":true,"checksumBefore":"e72f5b3b2fa","checksumAfter":"54f7de3d2f9","mode":"100644","oldName":"src/bios/plugin/web/wfs/getrequests/GetCapabilitiesRequest.java","language":"java","newName":"src/bios/plugin/web/wfs/getrequests/GetCapabilitiesRequest.java","isCombined":false},{"blocks":[{"lines":[{"content":"         getParametersAndValues ().put (\"version\", version);","type":"context","oldNumber":35,"newNumber":35},{"content":"     }","type":"context","oldNumber":36,"newNumber":36},{"content":" ","type":"context","oldNumber":37,"newNumber":37},{"content":"+    public void setVersion (WFSVersion version) {","type":"insert","newNumber":38},{"content":"+        this.version = version;","type":"insert","newNumber":39},{"content":"+        getParametersAndValues ().put (\"version\", version.toString ());","type":"insert","newNumber":40},{"content":"+    }","type":"insert","newNumber":41},{"content":"+","type":"insert","newNumber":42},{"content":"     public WFSVersion getVersion () {","type":"context","oldNumber":38,"newNumber":43},{"content":"         return version;","type":"context","oldNumber":39,"newNumber":44},{"content":"     }","type":"context","oldNumber":40,"newNumber":45}],"oldStartLine":35,"oldStartLine2":null,"newStartLine":35,"header":"@@ -35,6 +35,11 @@ public class GetRequestBuilder implements WFSGetRequestBuilder, WFSRequestBuilde"}],"deletedLines":0,"addedLines":5,"isGitDiff":true,"checksumBefore":"c12679c3b2c","checksumAfter":"221360858a0","mode":"100644","oldName":"src/bios/plugin/web/wfs/getrequests/GetRequestBuilder.java","language":"java","newName":"src/bios/plugin/web/wfs/getrequests/GetRequestBuilder.java","isCombined":false},{"blocks":[{"lines":[{"content":" ","type":"context","oldNumber":2,"newNumber":2},{"content":" import bios.jcommon.Pair;","type":"context","oldNumber":3,"newNumber":3},{"content":" ","type":"context","oldNumber":4,"newNumber":4},{"content":"+import java.net.URL;","type":"insert","newNumber":5},{"content":" import java.util.ArrayList;","type":"context","oldNumber":5,"newNumber":6},{"content":"+import java.util.LinkedHashMap;","type":"insert","newNumber":7},{"content":" import java.util.List;","type":"context","oldNumber":6,"newNumber":8},{"content":" import java.util.Map;","type":"context","oldNumber":7,"newNumber":9},{"content":" /**","type":"context","oldNumber":8,"newNumber":10}],"oldStartLine":2,"oldStartLine2":null,"newStartLine":2,"header":"@@ -2,7 +2,9 @@ package bios.plugin.web.wfs.getrequests;"},{"lines":[{"content":" \treturn sb.toString ();","type":"context","oldNumber":32,"newNumber":34},{"content":"     }","type":"context","oldNumber":33,"newNumber":35},{"content":" ","type":"context","oldNumber":34,"newNumber":36},{"content":"+    public static Map<String, String> getParameters (String s) {","type":"insert","newNumber":37},{"content":"+\tif (s == null) {","type":"insert","newNumber":38},{"content":"+\t    return Map.of ();","type":"insert","newNumber":39},{"content":"+\t}","type":"insert","newNumber":40},{"content":"+\tint queryPrefixEndIdx = s.indexOf ('?');","type":"insert","newNumber":41},{"content":"+\tMap<String, String> parameterMap = new LinkedHashMap<> ();","type":"insert","newNumber":42},{"content":"+\tif (queryPrefixEndIdx != -1) {","type":"insert","newNumber":43},{"content":"+\t    String queryPart = s.substring (queryPrefixEndIdx + 1);","type":"insert","newNumber":44},{"content":"+\t    String[] keyValuePairs = splitKeyValuePairs (queryPart);","type":"insert","newNumber":45},{"content":"+\t    for (String keyValuePair : keyValuePairs) {","type":"insert","newNumber":46},{"content":"+\t\tString[] keyAndValue = splitKeyValuePair (keyValuePair);","type":"insert","newNumber":47},{"content":"+\t\tparameterMap.put (keyAndValue[0], keyAndValue[1]);","type":"insert","newNumber":48},{"content":"+\t    }","type":"insert","newNumber":49},{"content":"+\t}","type":"insert","newNumber":50},{"content":"+\treturn parameterMap;","type":"insert","newNumber":51},{"content":"+    }","type":"insert","newNumber":52},{"content":"+","type":"insert","newNumber":53},{"content":"+    public static String getUrlWithoutQuery (String url) {","type":"insert","newNumber":54},{"content":"+\tint queryPrefixEndIdx = url.indexOf ('?');","type":"insert","newNumber":55},{"content":"+\tif (queryPrefixEndIdx != -1) {","type":"insert","newNumber":56},{"content":"+\t    return url.substring (0, queryPrefixEndIdx + 1);","type":"insert","newNumber":57},{"content":"+\t}","type":"insert","newNumber":58},{"content":"+\treturn url;","type":"insert","newNumber":59},{"content":"+    }","type":"insert","newNumber":60},{"content":"+","type":"insert","newNumber":61},{"content":"+    private static String[] splitKeyValuePairs (String keyValuePairs) {","type":"insert","newNumber":62},{"content":"+\treturn keyValuePairs.split (\"&\");","type":"insert","newNumber":63},{"content":"+    }","type":"insert","newNumber":64},{"content":"+","type":"insert","newNumber":65},{"content":"+    private static String[] splitKeyValuePair (String keyValuePair) {","type":"insert","newNumber":66},{"content":"+\tString[] pair = keyValuePair.split (\"=\");","type":"insert","newNumber":67},{"content":"+\tif (pair.length == 1) {","type":"insert","newNumber":68},{"content":"+\t    // key with empty value","type":"insert","newNumber":69},{"content":"+\t    return new String[] {pair[0], \"\"};","type":"insert","newNumber":70},{"content":"+\t}","type":"insert","newNumber":71},{"content":"+\treturn pair;","type":"insert","newNumber":72},{"content":"+    }","type":"insert","newNumber":73},{"content":"+","type":"insert","newNumber":74},{"content":"     public static String implode (List<Pair<String, String>> kvs) {","type":"context","oldNumber":35,"newNumber":75},{"content":" \treturn implode (null, kvs);","type":"context","oldNumber":36,"newNumber":76},{"content":"     }","type":"context","oldNumber":37,"newNumber":77}],"oldStartLine":32,"oldStartLine2":null,"newStartLine":34,"header":"@@ -32,6 +34,44 @@ public class GetRequestHelper {"}],"deletedLines":0,"addedLines":40,"isGitDiff":true,"checksumBefore":"6d9fb0976a8","checksumAfter":"864e8410e6b","mode":"100644","oldName":"src/bios/plugin/web/wfs/getrequests/GetRequestHelper.java","language":"java","newName":"src/bios/plugin/web/wfs/getrequests/GetRequestHelper.java","isCombined":false},{"blocks":[{"lines":[{"content":"  */","type":"context","oldNumber":23,"newNumber":23},{"content":" public class WFSHandler {","type":"context","oldNumber":24,"newNumber":24},{"content":" ","type":"context","oldNumber":25,"newNumber":25},{"content":"-    private WFS.Version version;","type":"delete","oldNumber":26},{"content":"+    private WFSVersion version;","type":"insert","newNumber":26},{"content":"     private Set<QName> featureNames;","type":"context","oldNumber":27,"newNumber":27},{"content":"     private Map<String, String> featuresToGeometries;","type":"context","oldNumber":28,"newNumber":28},{"content":" ","type":"context","oldNumber":29,"newNumber":29}],"oldStartLine":23,"oldStartLine2":null,"newStartLine":23,"header":"@@ -23,7 +23,7 @@ import java.util.*;"},{"lines":[{"content":"     // In some way one needs to know under what strings the server stores the information for different operations","type":"context","oldNumber":33,"newNumber":33},{"content":"     // Somewhere, some kind of enum or similar needs to exist","type":"context","oldNumber":34,"newNumber":34},{"content":" ","type":"context","oldNumber":35,"newNumber":35},{"content":"-","type":"delete","oldNumber":36},{"content":"-","type":"delete","oldNumber":37},{"content":"     private Map<WFSOperationType, Map<RequestMethod, String>> operationsToEndpoints;","type":"context","oldNumber":38,"newNumber":36},{"content":" ","type":"context","oldNumber":39,"newNumber":37},{"content":"     private String endpointGuess = null;","type":"context","oldNumber":40,"newNumber":38},{"content":" ","type":"context","oldNumber":41,"newNumber":39},{"content":"-    public WFSHandler (WFS.Version version, Set<QName> featureNames, Map<String, String> featuresToGeometries,","type":"delete","oldNumber":42},{"content":"+    public WFSHandler (WFSVersion version, Set<QName> featureNames, Map<String, String> featuresToGeometries,","type":"insert","newNumber":40},{"content":" \t\t       WFSCapabilitiesBase baseCapabilities) {","type":"context","oldNumber":43,"newNumber":41},{"content":" \tthis.version = version;","type":"context","oldNumber":44,"newNumber":42},{"content":" \tthis.featureNames = featureNames;","type":"context","oldNumber":45,"newNumber":43}],"oldStartLine":33,"oldStartLine2":null,"newStartLine":33,"header":"@@ -33,13 +33,11 @@ public class WFSHandler {"},{"lines":[{"content":" \tthis.baseCapabilities = baseCapabilities;","type":"context","oldNumber":47,"newNumber":45},{"content":"     }","type":"context","oldNumber":48,"newNumber":46},{"content":" ","type":"context","oldNumber":49,"newNumber":47},{"content":"+    public static WFSHandler fromBase (WFSCapabilitiesBase capabilitiesBase) {","type":"insert","newNumber":48},{"content":"+\treturn null;","type":"insert","newNumber":49},{"content":"+    }","type":"insert","newNumber":50},{"content":"+","type":"insert","newNumber":51},{"content":"     // TODO: http://www.opengis.net/gml/3.2 - figure out why one wfs server only supports this namespace","type":"context","oldNumber":50,"newNumber":52},{"content":"-    public WFS.Version getVersion () {","type":"delete","oldNumber":51},{"content":"+    public WFSVersion getVersion () {","type":"insert","newNumber":53},{"content":" \tif (version != null) {","type":"context","oldNumber":52,"newNumber":54},{"content":" \t    return version; // maybe one wants to force change the version","type":"context","oldNumber":53,"newNumber":55},{"content":" \t}","type":"context","oldNumber":54,"newNumber":56}],"oldStartLine":47,"oldStartLine2":null,"newStartLine":45,"header":"@@ -47,8 +45,12 @@ public class WFSHandler {"},{"lines":[{"content":" ","type":"context","oldNumber":291,"newNumber":293},{"content":"     }","type":"context","oldNumber":292,"newNumber":294},{"content":" ","type":"context","oldNumber":293,"newNumber":295},{"content":"-    private static WFS.Version getVersion (String s) {","type":"delete","oldNumber":294},{"content":"+    private static WFSVersion getVersion (String s) {","type":"insert","newNumber":296},{"content":" \tif (s == null) {","type":"context","oldNumber":295,"newNumber":297},{"content":" \t    return null;","type":"context","oldNumber":296,"newNumber":298},{"content":" \t}","type":"context","oldNumber":297,"newNumber":299},{"content":"-\tif (s.equals (\"1.1.0\")) {","type":"delete","oldNumber":298},{"content":"-\t    return WFS.Version.v110;","type":"delete","oldNumber":299},{"content":"-\t} else if (s.equals (\"2.0\")) {","type":"delete","oldNumber":300},{"content":"-\t    return WFS.Version.v2;","type":"delete","oldNumber":301},{"content":"-\t} else if (s.equals (\"2.0.0\")) {","type":"delete","oldNumber":302},{"content":"-\t    return WFS.Version.v2;","type":"delete","oldNumber":303},{"content":"-\t}","type":"delete","oldNumber":304},{"content":"+\treturn switch (s) {","type":"insert","newNumber":300},{"content":"+\t    case \"1.1.0\" -> WFSVersion.v110;","type":"insert","newNumber":301},{"content":"+\t    case \"2.0\", \"2.0.0\" -> WFSVersion.v2;","type":"insert","newNumber":302},{"content":"+\t    default -> null;","type":"insert","newNumber":303},{"content":"+\t};","type":"insert","newNumber":304},{"content":" ","type":"context","oldNumber":305,"newNumber":305},{"content":"-\treturn null;","type":"delete","oldNumber":306},{"content":"     }","type":"context","oldNumber":307,"newNumber":306},{"content":" ","type":"context","oldNumber":308,"newNumber":307},{"content":"     public static Map<String, String> getLowerCaseQueryMap (String query) {","type":"context","oldNumber":309,"newNumber":308}],"oldStartLine":291,"oldStartLine2":null,"newStartLine":293,"header":"@@ -291,19 +293,16 @@ public class WFSHandler {"}],"deletedLines":14,"addedLines":13,"isGitDiff":true,"checksumBefore":"4f0edc06ce2","checksumAfter":"ab866d444af","mode":"100644","oldName":"src/bios/plugin/web/wfs/handlers/WFSHandler.java","language":"java","newName":"src/bios/plugin/web/wfs/handlers/WFSHandler.java","isCombined":false},{"blocks":[{"lines":[{"content":" import bios.plugin.web.wfs.RequestMethod;","type":"context","oldNumber":3,"newNumber":3},{"content":" ","type":"context","oldNumber":4,"newNumber":4},{"content":" import java.util.ArrayList;","type":"context","oldNumber":5,"newNumber":5},{"content":"+import java.util.LinkedHashMap;","type":"insert","newNumber":6},{"content":" import java.util.List;","type":"context","oldNumber":6,"newNumber":7},{"content":"+import java.util.Map;","type":"insert","newNumber":8},{"content":" ","type":"context","oldNumber":7,"newNumber":9},{"content":" /**","type":"context","oldNumber":8,"newNumber":10},{"content":"  * TODO: this class doesn't have to be sealed","type":"context","oldNumber":9,"newNumber":11}],"oldStartLine":3,"oldStartLine2":null,"newStartLine":3,"header":"@@ -3,7 +3,9 @@ package bios.plugin.web.wfs.operations;"},{"lines":[{"content":"         }","type":"context","oldNumber":75,"newNumber":77},{"content":"         return List.copyOf (requestMethods);","type":"context","oldNumber":76,"newNumber":78},{"content":"     }","type":"context","oldNumber":77,"newNumber":79},{"content":"+","type":"insert","newNumber":80},{"content":"+    public Map<RequestMethod, String> getRequestMethodToURL () {","type":"insert","newNumber":81},{"content":"+        String get = getGetEndpoint ();","type":"insert","newNumber":82},{"content":"+        String post = getPostEndpoint ();","type":"insert","newNumber":83},{"content":"+        Map<RequestMethod, String> requestMap = new LinkedHashMap<> ();","type":"insert","newNumber":84},{"content":"+        if (get != null) {","type":"insert","newNumber":85},{"content":"+            requestMap.put (RequestMethod.GET, get);","type":"insert","newNumber":86},{"content":"+        }","type":"insert","newNumber":87},{"content":"+        if (post != null) {","type":"insert","newNumber":88},{"content":"+            requestMap.put (RequestMethod.POST, post);","type":"insert","newNumber":89},{"content":"+        }","type":"insert","newNumber":90},{"content":"+        return Map.copyOf (requestMap);","type":"insert","newNumber":91},{"content":"+    }","type":"insert","newNumber":92},{"content":" }","type":"context","oldNumber":78,"newNumber":93}],"oldStartLine":75,"oldStartLine2":null,"newStartLine":77,"header":"@@ -75,4 +77,17 @@ public sealed abstract class WFSOperation permits WFSOperation2, WFSOperation110"}],"deletedLines":0,"addedLines":15,"isGitDiff":true,"checksumBefore":"7f61f2ddeea","checksumAfter":"d98ca1b200b","mode":"100644","oldName":"src/bios/plugin/web/wfs/operations/WFSOperation.java","language":"java","newName":"src/bios/plugin/web/wfs/operations/WFSOperation.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs;","type":"delete","oldNumber":1},{"content":"-","type":"delete","oldNumber":2},{"content":"-import bios.plugin.web.wfs.operations.WFSOperation;","type":"delete","oldNumber":3},{"content":"-import bios.plugin.web.wfs.wfs110.WFSOperationsMetadata110;","type":"delete","oldNumber":4},{"content":"-import bios.plugin.web.wfs.wfs2.WFSOperationsMetadata2;","type":"delete","oldNumber":5},{"content":"+package bios.plugin.web.wfs.operations;","type":"insert","newNumber":1},{"content":" ","type":"context","oldNumber":6,"newNumber":2},{"content":" import java.util.List;","type":"context","oldNumber":7,"newNumber":3},{"content":" import java.util.Optional;","type":"context","oldNumber":8,"newNumber":4}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,8 +1,4 @@"}],"deletedLines":5,"addedLines":1,"isGitDiff":true,"checksumBefore":"48f49a2ccf6","checksumAfter":"56f6dbb1a41","mode":"100644","oldName":"src/bios/plugin/web/wfs/operations/WFSOperationsMetadata.java","language":"java","newName":"src/bios/plugin/web/wfs/operations/WFSOperationsMetadata.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.wfs110;","type":"delete","oldNumber":1},{"content":"-","type":"delete","oldNumber":2},{"content":"-import bios.plugin.web.wfs.operations.WFSOperation;","type":"delete","oldNumber":3},{"content":"-import bios.plugin.web.wfs.WFSOperationsMetadata;","type":"delete","oldNumber":4},{"content":"+package bios.plugin.web.wfs.operations;","type":"insert","newNumber":1},{"content":" ","type":"context","oldNumber":5,"newNumber":2},{"content":" import java.util.List;","type":"context","oldNumber":6,"newNumber":3},{"content":" import java.util.Objects;","type":"context","oldNumber":7,"newNumber":4}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,7 +1,4 @@"}],"deletedLines":4,"addedLines":1,"isGitDiff":true,"checksumBefore":"8b1051eca31","checksumAfter":"e852cf5edea","mode":"100644","oldName":"src/bios/plugin/web/wfs/operations/WFSOperationsMetadata110.java","language":"java","newName":"src/bios/plugin/web/wfs/operations/WFSOperationsMetadata110.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.wfs2;","type":"delete","oldNumber":1},{"content":"-","type":"delete","oldNumber":2},{"content":"-import bios.plugin.web.wfs.operations.WFSOperation;","type":"delete","oldNumber":3},{"content":"-import bios.plugin.web.wfs.WFSOperationsMetadata;","type":"delete","oldNumber":4},{"content":"+package bios.plugin.web.wfs.operations;","type":"insert","newNumber":1},{"content":" ","type":"context","oldNumber":5,"newNumber":2},{"content":" import java.util.List;","type":"context","oldNumber":6,"newNumber":3},{"content":" import java.util.Objects;","type":"context","oldNumber":7,"newNumber":4}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,7 +1,4 @@"}],"deletedLines":4,"addedLines":1,"isGitDiff":true,"checksumBefore":"ee982df3330","checksumAfter":"332dc20d091","mode":"100644","oldName":"src/bios/plugin/web/wfs/operations/WFSOperationsMetadata2.java","language":"java","newName":"src/bios/plugin/web/wfs/operations/WFSOperationsMetadata2.java","isCombined":false},{"blocks":[{"lines":[{"content":"  * Parse WFS 1.1.0 feature collections into the results (or exceptions) they represent.","type":"context","oldNumber":22,"newNumber":22},{"content":"  * The parsing stops where a general xml element is found that can not be parsed further.","type":"context","oldNumber":23,"newNumber":23},{"content":"  *","type":"context","oldNumber":24,"newNumber":24},{"content":"+ * TODO: use a base class or something here?","type":"insert","newNumber":25},{"content":"  * @author <a href=\"mailto:jakob.kratz@digpro.se\">Jakob Kratz</a>, Digpro AB","type":"context","oldNumber":25,"newNumber":26},{"content":"  */","type":"context","oldNumber":26,"newNumber":27},{"content":" public class WFSResponseParser110 {","type":"context","oldNumber":27,"newNumber":28}],"oldStartLine":22,"oldStartLine2":null,"newStartLine":22,"header":"@@ -22,6 +22,7 @@ import java.util.List;"}],"deletedLines":0,"addedLines":1,"isGitDiff":true,"checksumBefore":"dea97d78344","checksumAfter":"7f84bf89d00","mode":"100644","oldName":"src/bios/plugin/web/wfs/parsing/WFSResponseParser110.java","language":"java","newName":"src/bios/plugin/web/wfs/parsing/WFSResponseParser110.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.requests;public class GetCapabilities110 {","type":"delete","oldNumber":1},{"content":"+package bios.plugin.web.wfs.requests;","type":"insert","newNumber":1},{"content":"+","type":"insert","newNumber":2},{"content":"+import jakarta.xml.bind.JAXBElement;","type":"insert","newNumber":3},{"content":"+","type":"insert","newNumber":4},{"content":"+public final class GetCapabilities110 extends WFSRequest110 {","type":"insert","newNumber":5},{"content":"+    public GetCapabilities110 (JAXBElement<?> xmlRequest) {","type":"insert","newNumber":6},{"content":"+\tsuper (xmlRequest);","type":"insert","newNumber":7},{"content":"+    }","type":"insert","newNumber":8},{"content":" }","type":"context","oldNumber":2,"newNumber":9}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,2 +1,9 @@"}],"deletedLines":1,"addedLines":8,"isGitDiff":true,"checksumBefore":"fb3b715ef7f","checksumAfter":"31cdf5d85df","mode":"100644","oldName":"src/bios/plugin/web/wfs/requests/GetCapabilities110.java","language":"java","newName":"src/bios/plugin/web/wfs/requests/GetCapabilities110.java","isCombined":false},{"blocks":[{"lines":[{"content":"-package bios.plugin.web.wfs.requests;public class GetCapabilities2 {","type":"delete","oldNumber":1},{"content":"+package bios.plugin.web.wfs.requests;","type":"insert","newNumber":1},{"content":"+","type":"insert","newNumber":2},{"content":"+import jakarta.xml.bind.JAXBElement;","type":"insert","newNumber":3},{"content":"+","type":"insert","newNumber":4},{"content":"+public final class GetCapabilities2 extends WFSRequest2 {","type":"insert","newNumber":5},{"content":"+    public GetCapabilities2 (JAXBElement<?> xmlRequest) {","type":"insert","newNumber":6},{"content":"+\tsuper (xmlRequest);","type":"insert","newNumber":7},{"content":"+    }","type":"insert","newNumber":8},{"content":" }","type":"context","oldNumber":2,"newNumber":9}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,2 +1,9 @@"}],"deletedLines":1,"addedLines":8,"isGitDiff":true,"checksumBefore":"1e145735a43","checksumAfter":"61281386c02","mode":"100644","oldName":"src/bios/plugin/web/wfs/requests/GetCapabilities2.java","language":"java","newName":"src/bios/plugin/web/wfs/requests/GetCapabilities2.java","isCombined":false},{"blocks":[{"lines":[{"content":" /**","type":"context","oldNumber":4,"newNumber":4},{"content":"  * @author <a href=\"mailto:jakob.kratz@digpro.se\">Jakob Kratz</a>, Digpro AB","type":"context","oldNumber":5,"newNumber":5},{"content":"  */","type":"context","oldNumber":6,"newNumber":6},{"content":"-public abstract sealed class WFSRequest110 extends WFSRequest permits GetFeature110, DescribeFeatureType110 {","type":"delete","oldNumber":7},{"content":"+public abstract sealed class WFSRequest110 extends WFSRequest permits GetFeature110, DescribeFeatureType110, GetCapabilities110 {","type":"insert","newNumber":7},{"content":"     public WFSRequest110 (JAXBElement<?> xmlRequest) {","type":"context","oldNumber":8,"newNumber":8},{"content":" \tsuper (xmlRequest);","type":"context","oldNumber":9,"newNumber":9},{"content":"     }","type":"context","oldNumber":10,"newNumber":10}],"oldStartLine":4,"oldStartLine2":null,"newStartLine":4,"header":"@@ -4,7 +4,7 @@ import jakarta.xml.bind.JAXBElement;"}],"deletedLines":1,"addedLines":1,"isGitDiff":true,"checksumBefore":"6dba1e5debe","checksumAfter":"5a16d8bb23c","mode":"100644","oldName":"src/bios/plugin/web/wfs/requests/WFSRequest110.java","language":"java","newName":"src/bios/plugin/web/wfs/requests/WFSRequest110.java","isCombined":false},{"blocks":[{"lines":[{"content":" package bios.plugin.web.wfs.requests;","type":"context","oldNumber":1,"newNumber":1},{"content":" ","type":"context","oldNumber":2,"newNumber":2},{"content":" import jakarta.xml.bind.JAXBElement;","type":"context","oldNumber":3,"newNumber":3},{"content":"+","type":"insert","newNumber":4},{"content":" /**","type":"context","oldNumber":4,"newNumber":5},{"content":"  * @author <a href=\"mailto:jakob.kratz@digpro.se\">Jakob Kratz</a>, Digpro AB","type":"context","oldNumber":5,"newNumber":6},{"content":"  */","type":"context","oldNumber":6,"newNumber":7},{"content":"-public sealed abstract class WFSRequest2 extends WFSRequest permits GetFeature2, GetPropertyValue2, DescribeFeatureType2 {","type":"delete","oldNumber":7},{"content":"+public sealed abstract class WFSRequest2 extends WFSRequest","type":"insert","newNumber":8},{"content":"+\tpermits GetFeature2, GetPropertyValue2, DescribeFeatureType2, GetCapabilities2 {","type":"insert","newNumber":9},{"content":"     public WFSRequest2 (JAXBElement<?> xmlRequest) {","type":"context","oldNumber":8,"newNumber":10},{"content":" \tsuper (xmlRequest);","type":"context","oldNumber":9,"newNumber":11},{"content":"     }","type":"context","oldNumber":10,"newNumber":12}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,10 +1,12 @@"}],"deletedLines":1,"addedLines":3,"isGitDiff":true,"checksumBefore":"faed9edf115","checksumAfter":"2d54cf74ab5","mode":"100644","oldName":"src/bios/plugin/web/wfs/requests/WFSRequest2.java","language":"java","newName":"src/bios/plugin/web/wfs/requests/WFSRequest2.java","isCombined":false},{"blocks":[{"lines":[{"content":" package bios.plugin.web.wfs.responses;","type":"context","oldNumber":1,"newNumber":1},{"content":"+","type":"insert","newNumber":2},{"content":" import bios.plugin.web.wfs.WFSException;","type":"context","oldNumber":2,"newNumber":3},{"content":" ","type":"context","oldNumber":3,"newNumber":4},{"content":" import java.util.List;","type":"context","oldNumber":4,"newNumber":5},{"content":"-import java.util.function.Function;","type":"delete","oldNumber":5},{"content":"-import java.util.stream.Stream;","type":"delete","oldNumber":6},{"content":" ","type":"context","oldNumber":7,"newNumber":6},{"content":" /**","type":"context","oldNumber":8,"newNumber":7},{"content":"  * Base class for all WFS responses.","type":"context","oldNumber":9,"newNumber":8},{"content":"- *","type":"delete","oldNumber":10},{"content":"  * @author <a href=\"mailto:jakob.kratz@digpro.se\">Jakob Kratz</a>, Digpro AB","type":"context","oldNumber":11,"newNumber":9},{"content":"  */","type":"context","oldNumber":12,"newNumber":10},{"content":"-public sealed abstract class WFSResponse<T> permits GetFeatureResponse, GetPropertyValueResponse, WFSExceptions,","type":"delete","oldNumber":13},{"content":"-        BaseResponse","type":"delete","oldNumber":14},{"content":"-{","type":"delete","oldNumber":15},{"content":"+public sealed abstract class WFSResponse<T>","type":"insert","newNumber":11},{"content":"+\tpermits GetFeatureResponse, GetPropertyValueResponse, WFSExceptions, BaseResponse {","type":"insert","newNumber":12},{"content":"     public abstract List<T> getResults ();","type":"context","oldNumber":16,"newNumber":13},{"content":" ","type":"context","oldNumber":17,"newNumber":14},{"content":"     public abstract List<WFSException> getExceptions ();","type":"context","oldNumber":18,"newNumber":15},{"content":" ","type":"context","oldNumber":19,"newNumber":16},{"content":"     public boolean isException () {","type":"context","oldNumber":20,"newNumber":17},{"content":"-        return false;","type":"delete","oldNumber":21},{"content":"+\treturn false;","type":"insert","newNumber":18},{"content":"     }","type":"context","oldNumber":22,"newNumber":19},{"content":" ","type":"context","oldNumber":23,"newNumber":20},{"content":"     public WFSExceptions<T> getException () {","type":"context","oldNumber":24,"newNumber":21},{"content":"-        return new WFSExceptions<> (getExceptions ());","type":"delete","oldNumber":25},{"content":"-    }","type":"delete","oldNumber":26},{"content":"-","type":"delete","oldNumber":27},{"content":"-    public <R> List<? extends R> mapResults (Function<? super T, ? extends R> mapper) {","type":"delete","oldNumber":28},{"content":"-        return getResults ().stream().map (mapper).toList ();","type":"delete","oldNumber":29},{"content":"-    }","type":"delete","oldNumber":30},{"content":"-","type":"delete","oldNumber":31},{"content":"-    public <R> Stream<R> streamResults (Function<? super T, ? extends R> mapper) {","type":"delete","oldNumber":32},{"content":"-        return getResults ().stream().map (mapper);","type":"delete","oldNumber":33},{"content":"+\treturn new WFSExceptions<> (getExceptions ());","type":"insert","newNumber":22},{"content":"     }","type":"context","oldNumber":34,"newNumber":23},{"content":" ","type":"context","oldNumber":35,"newNumber":24},{"content":" }","type":"context","oldNumber":36,"newNumber":25}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,36 +1,25 @@"}],"deletedLines":16,"addedLines":5,"isGitDiff":true,"checksumBefore":"f50e46a2662","checksumAfter":"05a3d0c1e0b","mode":"100644","oldName":"src/bios/plugin/web/wfs/responses/WFSResponse.java","language":"java","newName":"src/bios/plugin/web/wfs/responses/WFSResponse.java","isCombined":false},{"blocks":[{"lines":[{"content":" package bios.plugin.web.wfs.responsewrappers;","type":"context","oldNumber":1,"newNumber":1},{"content":" ","type":"context","oldNumber":2,"newNumber":2},{"content":"+@Deprecated","type":"insert","newNumber":3},{"content":" public sealed abstract class WrappedResponse<T>","type":"context","oldNumber":3,"newNumber":4},{"content":" \tpermits WrappedGetFeatureResponse2, WrappedGetFeatureResponse110, WrappedGetCapabilitiesResponse2,","type":"context","oldNumber":4,"newNumber":5},{"content":" \tWrappedGetCapabilitiesResponse110, WrappedDescribeFeatureTypeResponse, WrappedGetPropertyValueResponse, WrappedExceptionReport110, WrappedExceptionReport2 {","type":"context","oldNumber":5,"newNumber":6}],"oldStartLine":1,"oldStartLine2":null,"newStartLine":1,"header":"@@ -1,5 +1,6 @@"}],"deletedLines":0,"addedLines":1,"isGitDiff":true,"checksumBefore":"9ae159daf81","checksumAfter":"4f71bb4228d","mode":"100644","oldName":"src/bios/plugin/web/wfs/responsewrappers/WrappedResponse.java","language":"java","newName":"src/bios/plugin/web/wfs/responsewrappers/WrappedResponse.java","isCombined":false},{"blocks":[{"lines":[{"content":" import bios.jcommon.helpers.StringHelper;","type":"context","oldNumber":3,"newNumber":3},{"content":" import bios.plugin.web.wfs.WFSCapabilitiesBase;","type":"context","oldNumber":4,"newNumber":4},{"content":" import bios.plugin.web.wfs.features.WFSFeatureType;","type":"context","oldNumber":5,"newNumber":5},{"content":"-import bios.plugin.web.wfs.WFSOperationsMetadata;","type":"delete","oldNumber":6},{"content":"+import bios.plugin.web.wfs.features.WFSFeatureTypeList;","type":"insert","newNumber":6},{"content":"+import bios.plugin.web.wfs.operations.WFSOperationsMetadata;","type":"insert","newNumber":7},{"content":" import bios.plugin.web.wfs.features.WFSFeatureType110;","type":"context","oldNumber":7,"newNumber":8},{"content":" import net.opengis.ows.v_1_0_0.DCP;","type":"context","oldNumber":8,"newNumber":9},{"content":" import net.opengis.ows.v_1_0_0.Operation;","type":"context","oldNumber":9,"newNumber":10}],"oldStartLine":3,"oldStartLine2":null,"newStartLine":3,"header":"@@ -3,7 +3,8 @@ package bios.plugin.web.wfs.wfs110;"},{"lines":[{"content":"         this.caps = caps;","type":"context","oldNumber":24,"newNumber":25},{"content":"     }","type":"context","oldNumber":25,"newNumber":26},{"content":" ","type":"context","oldNumber":26,"newNumber":27},{"content":"-    @Override","type":"delete","oldNumber":27},{"content":"-    public List<WFSFeatureType> getFeatureTypes () {","type":"delete","oldNumber":28},{"content":"-        return caps.getFeatureTypeList ().getFeatureType ().stream ().map (","type":"delete","oldNumber":29},{"content":"-                ftt -> (WFSFeatureType) new WFSFeatureType110 (ftt)).toList ();","type":"delete","oldNumber":30},{"content":"-    }","type":"delete","oldNumber":31},{"content":"-","type":"delete","oldNumber":32},{"content":"     @Override","type":"context","oldNumber":33,"newNumber":28},{"content":"     public List<QName> getFeatureTypeQNames () {","type":"context","oldNumber":34,"newNumber":29},{"content":"         return getFeatureTypes ().stream().map (WFSFeatureType::getName).toList ();","type":"context","oldNumber":35,"newNumber":30}],"oldStartLine":24,"oldStartLine2":null,"newStartLine":25,"header":"@@ -24,12 +25,6 @@ public class WFSCapabilities110 extends WFSCapabilitiesBase {"},{"lines":[{"content":"         return caps.getServiceIdentification ().getTitle ();","type":"context","oldNumber":40,"newNumber":35},{"content":"     }","type":"context","oldNumber":41,"newNumber":36},{"content":" ","type":"context","oldNumber":42,"newNumber":37},{"content":"+    @Override","type":"insert","newNumber":38},{"content":"+    public Optional<WFSFeatureTypeList> getFeatureTypeList () {","type":"insert","newNumber":39},{"content":"+        return Optional.of (WFSFeatureTypeList.wrap (caps.getFeatureTypeList ()));","type":"insert","newNumber":40},{"content":"+    }","type":"insert","newNumber":41},{"content":"+","type":"insert","newNumber":42},{"content":" ","type":"context","oldNumber":43,"newNumber":43},{"content":"     public String getGetFeaturePOSTEndpoint () {","type":"context","oldNumber":44,"newNumber":44},{"content":"         return getPOSTUrlByOperationName (\"GetFeature\");","type":"context","oldNumber":45,"newNumber":45}],"oldStartLine":40,"oldStartLine2":null,"newStartLine":35,"header":"@@ -40,6 +35,11 @@ public class WFSCapabilities110 extends WFSCapabilitiesBase {"},{"lines":[{"content":"             return null;","type":"context","oldNumber":78,"newNumber":78},{"content":"         }","type":"context","oldNumber":79,"newNumber":79},{"content":"         // Find the first operation with the right string name, ignoring case","type":"context","oldNumber":80,"newNumber":80},{"content":"-        Optional<Operation> ops = getOperations ().stream ().filter (","type":"delete","oldNumber":81},{"content":"+        Optional<Operation> ops = getOperationsInternal ().stream ().filter (","type":"insert","newNumber":81},{"content":"                 op -> opName.equalsIgnoreCase (op.getName ())).findFirst ();","type":"context","oldNumber":82,"newNumber":82},{"content":"         if (ops.isPresent ()) {","type":"context","oldNumber":83,"newNumber":83},{"content":"             Operation op = ops.get ();","type":"context","oldNumber":84,"newNumber":84}],"oldStartLine":78,"oldStartLine2":null,"newStartLine":78,"header":"@@ -78,7 +78,7 @@ public class WFSCapabilities110 extends WFSCapabilitiesBase {"},{"lines":[{"content":" ","type":"context","oldNumber":109,"newNumber":109},{"content":"     private Map<String, Map<String, String>> getOperationEndpoints () {","type":"context","oldNumber":110,"newNumber":110},{"content":"         Map<String, Map<String, String>> operationRequestMap = new LinkedHashMap<> ();","type":"context","oldNumber":111,"newNumber":111},{"content":"-        List<Operation> operations = getOperations ();","type":"delete","oldNumber":112},{"content":"+        List<Operation> operations = getOperationsInternal ();","type":"insert","newNumber":112},{"content":"         for (Operation op : operations) {","type":"context","oldNumber":113,"newNumber":113},{"content":"             String opName = op.getName ();","type":"context","oldNumber":114,"newNumber":114},{"content":"             operationRequestMap.putIfAbsent (opName, new LinkedHashMap<> ());","type":"context","oldNumber":115,"newNumber":115}],"oldStartLine":109,"oldStartLine2":null,"newStartLine":109,"header":"@@ -109,7 +109,7 @@ public class WFSCapabilities110 extends WFSCapabilitiesBase {"},{"lines":[{"content":"         return operationRequestMap;","type":"context","oldNumber":125,"newNumber":125},{"content":"     }","type":"context","oldNumber":126,"newNumber":126},{"content":" ","type":"context","oldNumber":127,"newNumber":127},{"content":"-    private List<Operation> getOperations () {","type":"delete","oldNumber":128},{"content":"+    private List<Operation> getOperationsInternal () {","type":"insert","newNumber":128},{"content":"         return caps.getOperationsMetadata ().getOperation ();","type":"context","oldNumber":129,"newNumber":129},{"content":"     }","type":"context","oldNumber":130,"newNumber":130},{"content":" }","type":"context","oldNumber":131,"newNumber":131}],"oldStartLine":125,"oldStartLine2":null,"newStartLine":125,"header":"@@ -125,7 +125,7 @@ public class WFSCapabilities110 extends WFSCapabilitiesBase {"}],"deletedLines":10,"addedLines":10,"isGitDiff":true,"checksumBefore":"bc255c5e026","checksumAfter":"978e0da8691","mode":"100644","oldName":"src/bios/plugin/web/wfs/wfs110/WFSCapabilities110.java","language":"java","newName":"src/bios/plugin/web/wfs/wfs110/WFSCapabilities110.java","isCombined":false},{"blocks":[{"lines":[{"content":" import java.io.*;","type":"context","oldNumber":3,"newNumber":3},{"content":" import java.util.*;","type":"context","oldNumber":4,"newNumber":4},{"content":" ","type":"context","oldNumber":5,"newNumber":5},{"content":"+import bios.plugin.web.wfs.WFSCapabilitiesBase;","type":"insert","newNumber":6},{"content":" import bios.plugin.web.wfs.features.WFSFeatureType;","type":"context","oldNumber":6,"newNumber":7},{"content":" import bios.plugin.web.wfs.WFSLoader;","type":"context","oldNumber":7,"newNumber":8},{"content":" import bios.plugin.web.wfs.WFSServer;","type":"context","oldNumber":8,"newNumber":9}],"oldStartLine":3,"oldStartLine2":null,"newStartLine":3,"header":"@@ -3,6 +3,7 @@ package bios.plugin.web.wfs.wfs110;"},{"lines":[{"content":"     private final String url;","type":"context","oldNumber":29,"newNumber":30},{"content":"     private final PluginContext pc;","type":"context","oldNumber":30,"newNumber":31},{"content":"     private final EPSGMapping mapping;","type":"context","oldNumber":31,"newNumber":32},{"content":"-    private WFSCapabilitiesType capabilities;","type":"delete","oldNumber":32},{"content":"+    private WFSCapabilitiesBase capabilities;","type":"insert","newNumber":33},{"content":"     private WFSLoader loader;","type":"context","oldNumber":33,"newNumber":34},{"content":"     private boolean active;","type":"context","oldNumber":34,"newNumber":35},{"content":"     ","type":"context","oldNumber":35,"newNumber":36}],"oldStartLine":29,"oldStartLine2":null,"newStartLine":30,"header":"@@ -29,7 +30,7 @@ public class WFSServer110 extends WFSServer implements OGCServer {"},{"lines":[{"content":"     public void load () {","type":"context","oldNumber":43,"newNumber":44},{"content":" \ttry {","type":"context","oldNumber":44,"newNumber":45},{"content":" \t    // TODO: probably load schemas here too, or the server will obviously not work","type":"context","oldNumber":45,"newNumber":46},{"content":"-\t    capabilities = WFSCommExecutor110.Post.getCapabilities (url).getLeft ();","type":"delete","oldNumber":46},{"content":"-\t    loader = new WFSLoader (new WFSCapabilities110 (capabilities), url, pc, props, mapping);","type":"delete","oldNumber":47},{"content":"+\t    var caps110 = WFSCommExecutor110.Post.getCapabilities (url).getLeft ();","type":"insert","newNumber":47},{"content":"+\t    this.capabilities = WFSCapabilitiesBase.wrap (caps110);","type":"insert","newNumber":48},{"content":"+\t    loader = new WFSLoader (capabilities, url, pc, props, mapping);","type":"insert","newNumber":49},{"content":" \t    pc.getUIManager ().addViewCreatedListener (loader);","type":"context","oldNumber":48,"newNumber":50},{"content":" \t} catch (IOException | JAXBException e) {","type":"context","oldNumber":49,"newNumber":51},{"content":" \t    // We do not want tests to fail just because some external server is down.","type":"context","oldNumber":50,"newNumber":52}],"oldStartLine":43,"oldStartLine2":null,"newStartLine":44,"header":"@@ -43,8 +44,9 @@ public class WFSServer110 extends WFSServer implements OGCServer {"},{"lines":[{"content":"     public String getTitle () {","type":"context","oldNumber":56,"newNumber":58},{"content":" \tString ret = props.getProperty (\"title\");","type":"context","oldNumber":57,"newNumber":59},{"content":" \tif (ret == null || ret.isEmpty ()) {","type":"context","oldNumber":58,"newNumber":60},{"content":"-\t    ret = capabilities.getServiceIdentification ().getTitle ();","type":"delete","oldNumber":59},{"content":"+\t    ret = capabilities.getServiceIdentificationTitle ();","type":"insert","newNumber":61},{"content":" \t}","type":"context","oldNumber":60,"newNumber":62},{"content":" \treturn ret;","type":"context","oldNumber":61,"newNumber":63},{"content":"     }","type":"context","oldNumber":62,"newNumber":64}],"oldStartLine":56,"oldStartLine2":null,"newStartLine":58,"header":"@@ -56,7 +58,7 @@ public class WFSServer110 extends WFSServer implements OGCServer {"}],"deletedLines":4,"addedLines":6,"isGitDiff":true,"checksumBefore":"5b18f806d8f","checksumAfter":"39bc6b4a655","mode":"100755","oldName":"src/bios/plugin/web/wfs/wfs110/WFSServer110.java","language":"java","newName":"src/bios/plugin/web/wfs/wfs110/WFSServer110.java","isCombined":false},{"blocks":[{"lines":[{"content":" import bios.jcommon.helpers.StringHelper;","type":"context","oldNumber":3,"newNumber":3},{"content":" import bios.plugin.web.wfs.WFS;","type":"context","oldNumber":4,"newNumber":4},{"content":" import bios.plugin.web.wfs.WFSCapabilitiesBase;","type":"context","oldNumber":5,"newNumber":5},{"content":"+import bios.plugin.web.wfs.WFSVersion;","type":"insert","newNumber":6},{"content":" import bios.plugin.web.wfs.features.WFSFeatureType;","type":"context","oldNumber":6,"newNumber":7},{"content":"-import bios.plugin.web.wfs.WFSOperationsMetadata;","type":"delete","oldNumber":7},{"content":"+import bios.plugin.web.wfs.features.WFSFeatureTypeList;","type":"insert","newNumber":8},{"content":"+import bios.plugin.web.wfs.operations.WFSOperationsMetadata;","type":"insert","newNumber":9},{"content":" import bios.plugin.web.wfs.features.WFSFeatureType2;","type":"context","oldNumber":8,"newNumber":10},{"content":" import net.opengis.ows.v_1_1_0.*;","type":"context","oldNumber":9,"newNumber":11},{"content":" ","type":"context","oldNumber":10,"newNumber":12}],"oldStartLine":3,"oldStartLine2":null,"newStartLine":3,"header":"@@ -3,8 +3,10 @@ package bios.plugin.web.wfs.wfs2;"},{"lines":[{"content":"     }","type":"context","oldNumber":21,"newNumber":23},{"content":" ","type":"context","oldNumber":22,"newNumber":24},{"content":"     @Override","type":"context","oldNumber":23,"newNumber":25},{"content":"-    public WFS.Version getVersion () {","type":"delete","oldNumber":24},{"content":"-        return WFS.Version.v2;","type":"delete","oldNumber":25},{"content":"-    }","type":"delete","oldNumber":26},{"content":"-","type":"delete","oldNumber":27},{"content":"-    @Override","type":"delete","oldNumber":28},{"content":"-    public List<WFSFeatureType> getFeatureTypes () {","type":"delete","oldNumber":29},{"content":"-        return caps.getFeatureTypeList ().getFeatureType ().stream ().map (","type":"delete","oldNumber":30},{"content":"-                ftt -> (WFSFeatureType) new WFSFeatureType2 (ftt)).toList ();","type":"delete","oldNumber":31},{"content":"+    public WFSVersion getVersion () {","type":"insert","newNumber":26},{"content":"+        return WFSVersion.v2;","type":"insert","newNumber":27},{"content":"     }","type":"context","oldNumber":32,"newNumber":28},{"content":" ","type":"context","oldNumber":33,"newNumber":29},{"content":"     @Override","type":"context","oldNumber":34,"newNumber":30}],"oldStartLine":21,"oldStartLine2":null,"newStartLine":23,"header":"@@ -21,14 +23,8 @@ public class WFSCapabilities2 extends WFSCapabilitiesBase {"},{"lines":[{"content":"         return caps.getServiceIdentification ().getTitle ().get (0).getValue ();","type":"context","oldNumber":43,"newNumber":39},{"content":"     }","type":"context","oldNumber":44,"newNumber":40},{"content":" ","type":"context","oldNumber":45,"newNumber":41},{"content":"-    public String getGetFeaturePOSTEndpoint () {","type":"delete","oldNumber":46},{"content":"-        return getPOSTUrlByOperationName (\"GetFeature\");","type":"delete","oldNumber":47},{"content":"+    @Override","type":"insert","newNumber":42},{"content":"+    public Optional<WFSFeatureTypeList> getFeatureTypeList () {","type":"insert","newNumber":43},{"content":"+        return Optional.of (WFSFeatureTypeList.wrap (caps.getFeatureTypeList ()));","type":"insert","newNumber":44},{"content":"     }","type":"context","oldNumber":48,"newNumber":45},{"content":" ","type":"context","oldNumber":49,"newNumber":46},{"content":"-    public String getGetFeatureGETEndpoint () {","type":"delete","oldNumber":50},{"content":"-        return getGETUrlByOperationName (\"GetFeature\");","type":"delete","oldNumber":51},{"content":"-    }","type":"delete","oldNumber":52},{"content":" ","type":"context","oldNumber":53,"newNumber":47},{"content":"     @Override","type":"context","oldNumber":54,"newNumber":48},{"content":"     public boolean hasMultipleNamespaces () {","type":"context","oldNumber":55,"newNumber":49}],"oldStartLine":43,"oldStartLine2":null,"newStartLine":39,"header":"@@ -43,13 +39,11 @@ public class WFSCapabilities2 extends WFSCapabilitiesBase {"},{"lines":[{"content":"         return Optional.empty ();","type":"context","oldNumber":67,"newNumber":61},{"content":"     }","type":"context","oldNumber":68,"newNumber":62},{"content":" ","type":"context","oldNumber":69,"newNumber":63},{"content":"-    private String getPOSTUrlByOperationName (String opName) {","type":"delete","oldNumber":70},{"content":"-        return getOperationEndpointByNameAndMethod (opName, \"post\");","type":"delete","oldNumber":71},{"content":"-    }","type":"delete","oldNumber":72},{"content":"-","type":"delete","oldNumber":73},{"content":"-    private String getGETUrlByOperationName (String opName) {","type":"delete","oldNumber":74},{"content":"-        return getOperationEndpointByNameAndMethod (opName, \"get\");","type":"delete","oldNumber":75},{"content":"-    }","type":"delete","oldNumber":76},{"content":"-","type":"delete","oldNumber":77},{"content":"     private String getOperationEndpointByNameAndMethod (String opName, String method) {","type":"context","oldNumber":78,"newNumber":64},{"content":"         if (StringHelper.isNullOrEmpty (opName)) {","type":"context","oldNumber":79,"newNumber":65},{"content":"             return null;","type":"context","oldNumber":80,"newNumber":66},{"content":"         }","type":"context","oldNumber":81,"newNumber":67},{"content":"         // Find the first operation with the right string name, ignoring case","type":"context","oldNumber":82,"newNumber":68},{"content":"-        Optional<Operation> ops = getOperations ().stream ().filter (","type":"delete","oldNumber":83},{"content":"+        Optional<Operation> ops = getOperationsInternal ().stream ().filter (","type":"insert","newNumber":69},{"content":"                 op -> opName.equalsIgnoreCase (op.getName ())).findFirst ();","type":"context","oldNumber":84,"newNumber":70},{"content":"         if (ops.isPresent ()) {","type":"context","oldNumber":85,"newNumber":71},{"content":"             Operation op = ops.get ();","type":"context","oldNumber":86,"newNumber":72}],"oldStartLine":67,"oldStartLine2":null,"newStartLine":61,"header":"@@ -67,20 +61,12 @@ public class WFSCapabilities2 extends WFSCapabilitiesBase {"},{"lines":[{"content":" ","type":"context","oldNumber":98,"newNumber":84},{"content":"     private Map<String, Map<String, String>> getOperationEndpoints () {","type":"context","oldNumber":99,"newNumber":85},{"content":"         Map<String, Map<String, String>> operationRequestMap = new LinkedHashMap<> ();","type":"context","oldNumber":100,"newNumber":86},{"content":"-        List<Operation> operations = getOperations ();","type":"delete","oldNumber":101},{"content":"+        List<Operation> operations = getOperationsInternal ();","type":"insert","newNumber":87},{"content":"         for (Operation op : operations) {","type":"context","oldNumber":102,"newNumber":88},{"content":"             String opName = op.getName ();","type":"context","oldNumber":103,"newNumber":89},{"content":"             operationRequestMap.putIfAbsent (opName, new LinkedHashMap<> ());","type":"context","oldNumber":104,"newNumber":90}],"oldStartLine":98,"oldStartLine2":null,"newStartLine":84,"header":"@@ -98,7 +84,7 @@ public class WFSCapabilities2 extends WFSCapabilitiesBase {"},{"lines":[{"content":"                 dt -> dt.getName ().equalsIgnoreCase (parameterName)).findFirst ().orElse (null);","type":"context","oldNumber":155,"newNumber":141},{"content":"     }","type":"context","oldNumber":156,"newNumber":142},{"content":"     private Operation getOperationByName (String operationName) {","type":"context","oldNumber":157,"newNumber":143},{"content":"-        List<Operation> operations = getOperations ();","type":"delete","oldNumber":158},{"content":"+        List<Operation> operations = getOperationsInternal ();","type":"insert","newNumber":144},{"content":"         for (Operation op : operations) {","type":"context","oldNumber":159,"newNumber":145},{"content":"             String opName = op.getName ();","type":"context","oldNumber":160,"newNumber":146},{"content":"             if (opName != null && opName.equalsIgnoreCase (operationName)) {","type":"context","oldNumber":161,"newNumber":147}],"oldStartLine":155,"oldStartLine2":null,"newStartLine":141,"header":"@@ -155,7 +141,7 @@ public class WFSCapabilities2 extends WFSCapabilitiesBase {"},{"lines":[{"content":"     }","type":"context","oldNumber":166,"newNumber":152},{"content":" ","type":"context","oldNumber":167,"newNumber":153},{"content":" ","type":"context","oldNumber":168,"newNumber":154},{"content":"-    private List<Operation> getOperations () {","type":"delete","oldNumber":169},{"content":"+    private List<Operation> getOperationsInternal () {","type":"insert","newNumber":155},{"content":"         return caps.getOperationsMetadata ().getOperation ();","type":"context","oldNumber":170,"newNumber":156},{"content":"     }","type":"context","oldNumber":171,"newNumber":157},{"content":" }","type":"context","oldNumber":172,"newNumber":158}],"oldStartLine":166,"oldStartLine2":null,"newStartLine":152,"header":"@@ -166,7 +152,7 @@ public class WFSCapabilities2 extends WFSCapabilitiesBase {"}],"deletedLines":26,"addedLines":12,"isGitDiff":true,"checksumBefore":"d244d2f6cfd","checksumAfter":"6edf79531fc","mode":"100644","oldName":"src/bios/plugin/web/wfs/wfs2/WFSCapabilities2.java","language":"java","newName":"src/bios/plugin/web/wfs/wfs2/WFSCapabilities2.java","isCombined":false},{"blocks":[{"lines":[{"content":" import bios.jcommon.wms.EPSGMapping;","type":"context","oldNumber":7,"newNumber":7},{"content":" import bios.plugin.PluginContext;","type":"context","oldNumber":8,"newNumber":8},{"content":" import bios.plugin.web.OGCServer;","type":"context","oldNumber":9,"newNumber":9},{"content":"+import bios.plugin.web.wfs.WFSCapabilitiesBase;","type":"insert","newNumber":10},{"content":" import bios.plugin.web.wfs.WFSLoader;","type":"context","oldNumber":10,"newNumber":11},{"content":" import bios.plugin.web.wfs.WFSServer;","type":"context","oldNumber":11,"newNumber":12},{"content":" import bios.plugin.web.wfs.communication.WFSCommExecutor2;","type":"context","oldNumber":12,"newNumber":13}],"oldStartLine":7,"oldStartLine2":null,"newStartLine":7,"header":"@@ -7,6 +7,7 @@ import bios.jcommon.helpers.StringHelper;"},{"lines":[{"content":"     private final String url;","type":"context","oldNumber":26,"newNumber":27},{"content":"     private final PluginContext pc;","type":"context","oldNumber":27,"newNumber":28},{"content":"     private final EPSGMapping mapping;","type":"context","oldNumber":28,"newNumber":29},{"content":"-    private net.opengis.wfs.v_2_0.WFSCapabilitiesType capabilities = null;","type":"delete","oldNumber":29},{"content":"+    private WFSCapabilitiesBase capabilities = null;","type":"insert","newNumber":30},{"content":"     private WFSLoader loader = null;","type":"context","oldNumber":30,"newNumber":31},{"content":"     private boolean active;","type":"context","oldNumber":31,"newNumber":32},{"content":" ","type":"context","oldNumber":32,"newNumber":33}],"oldStartLine":26,"oldStartLine2":null,"newStartLine":27,"header":"@@ -26,7 +27,7 @@ public class WFSServer2 extends WFSServer implements OGCServer {"},{"lines":[{"content":" \t    var maybeCaps = WFSCommExecutor2.Post.getCapabilities (url);","type":"context","oldNumber":44,"newNumber":45},{"content":" \t    // TODO: this is too not good","type":"context","oldNumber":45,"newNumber":46},{"content":" \t    if (maybeCaps.leftPresent ()) {","type":"context","oldNumber":46,"newNumber":47},{"content":"-\t\tcapabilities = maybeCaps.getLeft ();","type":"delete","oldNumber":47},{"content":"-\t    } else {","type":"delete","oldNumber":48},{"content":"-\t\treturn;","type":"delete","oldNumber":49},{"content":"+\t\tvar caps2 = maybeCaps.getLeft ();","type":"insert","newNumber":48},{"content":"+\t\tloader = new WFSLoader (WFSCapabilitiesBase.wrap (caps2), url, pc, props, mapping);","type":"insert","newNumber":49},{"content":"+\t\tpc.getUIManager ().addViewCreatedListener (loader);","type":"insert","newNumber":50},{"content":" \t    }","type":"context","oldNumber":50,"newNumber":51},{"content":"-","type":"delete","oldNumber":51},{"content":"-\t    loader = new WFSLoader (new WFSCapabilities2 (capabilities), url, pc, props, mapping);","type":"delete","oldNumber":52},{"content":"-\t    pc.getUIManager ().addViewCreatedListener (loader);","type":"delete","oldNumber":53},{"content":" \t} catch (IOException | JAXBException e) {","type":"context","oldNumber":54,"newNumber":52},{"content":" \t    // We do not want tests to fail just because some external server is down.","type":"context","oldNumber":55,"newNumber":53},{"content":" \t    Log.printStackTraceUnlessTesting (e);","type":"context","oldNumber":56,"newNumber":54}],"oldStartLine":44,"oldStartLine2":null,"newStartLine":45,"header":"@@ -44,13 +45,10 @@ public class WFSServer2 extends WFSServer implements OGCServer {"},{"lines":[{"content":" ","type":"context","oldNumber":59,"newNumber":57},{"content":"     public String getTitle () {","type":"context","oldNumber":60,"newNumber":58},{"content":" \tString ret = props.getProperty (\"title\");","type":"context","oldNumber":61,"newNumber":59},{"content":"+\tif (ret == null || ret.isEmpty ()) {","type":"insert","newNumber":60},{"content":"+\t    ret = capabilities.getServiceIdentificationTitle ();","type":"insert","newNumber":61},{"content":"+\t}","type":"insert","newNumber":62},{"content":" \treturn ret;","type":"context","oldNumber":62,"newNumber":63},{"content":"     }","type":"context","oldNumber":63,"newNumber":64},{"content":" ","type":"context","oldNumber":64,"newNumber":65}],"oldStartLine":59,"oldStartLine2":null,"newStartLine":57,"header":"@@ -59,6 +57,9 @@ public class WFSServer2 extends WFSServer implements OGCServer {"}],"deletedLines":7,"addedLines":8,"isGitDiff":true,"checksumBefore":"9548bd72833","checksumAfter":"552f34826f3","mode":"100644","oldName":"src/bios/plugin/web/wfs/wfs2/WFSServer2.java","language":"java","newName":"src/bios/plugin/web/wfs/wfs2/WFSServer2.java","isCombined":false}]
